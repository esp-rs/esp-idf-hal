(function() {
    var implementors = Object.fromEntries([["embassy_sync",[["impl&lt;'a, M, T&gt; Deref for <a class=\"struct\" href=\"embassy_sync/mutex/struct.MappedMutexGuard.html\" title=\"struct embassy_sync::mutex::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>,\n    T: ?Sized,</div>"],["impl&lt;'a, M, T&gt; Deref for <a class=\"struct\" href=\"embassy_sync/mutex/struct.MutexGuard.html\" title=\"struct embassy_sync::mutex::MutexGuard\">MutexGuard</a>&lt;'a, M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>,\n    T: ?Sized,</div>"],["impl&lt;'a, M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, T: Clone, const CAP: usize, const SUBS: usize, const PUBS: usize&gt; Deref for <a class=\"struct\" href=\"embassy_sync/pubsub/publisher/struct.ImmediatePublisher.html\" title=\"struct embassy_sync::pubsub::publisher::ImmediatePublisher\">ImmediatePublisher</a>&lt;'a, M, T, CAP, SUBS, PUBS&gt;"],["impl&lt;'a, M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, T: Clone, const CAP: usize, const SUBS: usize, const PUBS: usize&gt; Deref for <a class=\"struct\" href=\"embassy_sync/pubsub/publisher/struct.Publisher.html\" title=\"struct embassy_sync::pubsub::publisher::Publisher\">Publisher</a>&lt;'a, M, T, CAP, SUBS, PUBS&gt;"],["impl&lt;'a, M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, T: Clone, const CAP: usize, const SUBS: usize, const PUBS: usize&gt; Deref for <a class=\"struct\" href=\"embassy_sync/pubsub/subscriber/struct.Subscriber.html\" title=\"struct embassy_sync::pubsub::subscriber::Subscriber\">Subscriber</a>&lt;'a, M, T, CAP, SUBS, PUBS&gt;"],["impl&lt;'a, M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, T: Clone, const N: usize&gt; Deref for <a class=\"struct\" href=\"embassy_sync/watch/struct.AnonReceiver.html\" title=\"struct embassy_sync::watch::AnonReceiver\">AnonReceiver</a>&lt;'a, M, T, N&gt;"],["impl&lt;'a, M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, T: Clone, const N: usize&gt; Deref for <a class=\"struct\" href=\"embassy_sync/watch/struct.Receiver.html\" title=\"struct embassy_sync::watch::Receiver\">Receiver</a>&lt;'a, M, T, N&gt;"],["impl&lt;'a, M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, T: Clone, const N: usize&gt; Deref for <a class=\"struct\" href=\"embassy_sync/watch/struct.Sender.html\" title=\"struct embassy_sync::watch::Sender\">Sender</a>&lt;'a, M, T, N&gt;"],["impl&lt;'a, T: Clone&gt; Deref for <a class=\"struct\" href=\"embassy_sync/pubsub/publisher/struct.DynImmediatePublisher.html\" title=\"struct embassy_sync::pubsub::publisher::DynImmediatePublisher\">DynImmediatePublisher</a>&lt;'a, T&gt;"],["impl&lt;'a, T: Clone&gt; Deref for <a class=\"struct\" href=\"embassy_sync/pubsub/publisher/struct.DynPublisher.html\" title=\"struct embassy_sync::pubsub::publisher::DynPublisher\">DynPublisher</a>&lt;'a, T&gt;"],["impl&lt;'a, T: Clone&gt; Deref for <a class=\"struct\" href=\"embassy_sync/pubsub/subscriber/struct.DynSubscriber.html\" title=\"struct embassy_sync::pubsub::subscriber::DynSubscriber\">DynSubscriber</a>&lt;'a, T&gt;"],["impl&lt;'a, T: Clone&gt; Deref for <a class=\"struct\" href=\"embassy_sync/watch/struct.DynAnonReceiver.html\" title=\"struct embassy_sync::watch::DynAnonReceiver\">DynAnonReceiver</a>&lt;'a, T&gt;"],["impl&lt;'a, T: Clone&gt; Deref for <a class=\"struct\" href=\"embassy_sync/watch/struct.DynReceiver.html\" title=\"struct embassy_sync::watch::DynReceiver\">DynReceiver</a>&lt;'a, T&gt;"],["impl&lt;'a, T: Clone&gt; Deref for <a class=\"struct\" href=\"embassy_sync/watch/struct.DynSender.html\" title=\"struct embassy_sync::watch::DynSender\">DynSender</a>&lt;'a, T&gt;"]]],["esp_idf_hal",[["impl&lt;'d, Dir&gt; Deref for <a class=\"struct\" href=\"esp_idf_hal/i2s/struct.I2sDriverRef.html\" title=\"struct esp_idf_hal::i2s::I2sDriverRef\">I2sDriverRef</a>&lt;'d, Dir&gt;"],["impl&lt;T&gt; Deref for <a class=\"struct\" href=\"esp_idf_hal/peripheral/struct.PeripheralRef.html\" title=\"struct esp_idf_hal::peripheral::PeripheralRef\">PeripheralRef</a>&lt;'_, T&gt;"]]],["heapless",[["impl&lt;T, Idx, K, const N: usize&gt; Deref for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.FindMut.html\" title=\"struct heapless::sorted_linked_list::FindMut\">FindMut</a>&lt;'_, T, Idx, K, N&gt;<div class=\"where\">where\n    T: Ord,\n    Idx: <a class=\"trait\" href=\"heapless/sorted_linked_list/trait.SortedLinkedListIndex.html\" title=\"trait heapless::sorted_linked_list::SortedLinkedListIndex\">SortedLinkedListIndex</a>,\n    K: <a class=\"trait\" href=\"heapless/sorted_linked_list/trait.Kind.html\" title=\"trait heapless::sorted_linked_list::Kind\">Kind</a>,</div>"],["impl&lt;T, K, const N: usize&gt; Deref for <a class=\"struct\" href=\"heapless/binary_heap/struct.PeekMut.html\" title=\"struct heapless::binary_heap::PeekMut\">PeekMut</a>&lt;'_, T, K, N&gt;<div class=\"where\">where\n    T: Ord,\n    K: <a class=\"trait\" href=\"heapless/binary_heap/trait.Kind.html\" title=\"trait heapless::binary_heap::Kind\">Kind</a>,</div>"],["impl&lt;T, const N: usize&gt; Deref for <a class=\"struct\" href=\"heapless/struct.HistoryBuffer.html\" title=\"struct heapless::HistoryBuffer\">HistoryBuffer</a>&lt;T, N&gt;"],["impl&lt;T, const N: usize&gt; Deref for <a class=\"struct\" href=\"heapless/struct.Vec.html\" title=\"struct heapless::Vec\">Vec</a>&lt;T, N&gt;"],["impl&lt;const N: usize&gt; Deref for <a class=\"struct\" href=\"heapless/struct.String.html\" title=\"struct heapless::String\">String</a>&lt;N&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[4522,395,1463]}