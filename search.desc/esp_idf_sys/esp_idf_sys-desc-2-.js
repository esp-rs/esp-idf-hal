searchState.loadedDescShard("esp_idf_sys", 2, "&lt; DES cipher with EDE3 CBC mode. \\warning 3DES is …\n&lt; DES cipher with EDE3 ECB mode. \\warning 3DES is …\n&lt; DES cipher with EDE CBC mode. \\warning 3DES is …\n&lt; DES cipher with EDE ECB mode. \\warning 3DES is …\n&lt; Placeholder to mark the end of cipher-pair lists.\n&lt; The identity stream cipher.\n\\brief               The generic cipher update function. …\n\\brief               This function adds additional data …\n\\brief               This function writes a tag for AEAD …\nThe CMAC context structure.\n\\brief          The CMAC checkup routine.\n\\brief          The CTR_DRBG context structure.\n\\brief               This function resets CTR_DRBG context …\n\\brief               This function initializes the …\n\\param p_rng         The CTR_DRBG context. This must be a …\n\\brief   This function updates a CTR_DRBG instance with …\n\\brief               This function reseeds the CTR_DRBG …\nThe \\p custom string.\\note                To achieve the …\n\\brief               The CTR_DRBG checkup routine.\n\\brief               This function sets the amount of …\n\\brief               This function sets the amount of …\n\\brief               This function turns prediction …\n\\brief               This function sets the reseed …\n\\brief              This function updates the state of the …\n\\brief               This function reads and updates a …\n\\brief               This function writes a seed file.\n\\brief   Set the threshold error level to handle globally …\n\\brief           This function derives and exports the …\n\\brief          Check whether a given group can be used …\n\\brief           This function computes the shared secret.\n\\warning         Performing multiple operations …\nThe context used by the default ECDH implementation.\n\\brief           This function frees a context.\n\\brief           This function generates an ECDH keypair …\n\\brief          Return the ECP group for provided context.\n\\brief           This function sets up an ECDH context …\n\\brief           This function initializes an ECDH context.\n\\brief           This function generates an EC key pair …\n\\brief           This function generates a public key and …\n\\brief           This function parses the ECDHE parameters …\n\\brief       This function parses and processes the ECDHE …\n\\brief           This function sets up the ECDH context …\nDefines the source of the imported EC key.\n&lt; Our key.\n&lt; The key of the peer.\nDefines the ECDH implementation used.\n&lt; The default Mbed TLS implementation\n&lt; Implementation not defined.\n\\brief          This function checks whether a given group …\n\\brief           The ECDSA context structure.\n\\brief           This function frees an ECDSA context.\n\\brief           This function sets up an ECDSA context …\n\\brief          This function generates an ECDSA keypair …\n\\brief           This function initializes an ECDSA …\n\\brief           This function reads and verifies an ECDSA …\n\\brief           This function reads and verifies an ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief               This function computes the ECDSA …\n\\brief               This function computes the ECDSA …\n\\brief           This function verifies the ECDSA …\n\\brief           This function verifies the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           This function computes the ECDSA …\n\\brief           Check if an ECJPAKE context is ready for …\nEC J-PAKE context structure.\n\\brief           Derive the shared secret (TLS: Pre-Master …\n\\brief           This clears an ECJPAKE context and frees …\n\\brief           Initialize an ECJPAKE context.\n\\brief           Read and process the first round message …\n\\brief           Read and process the second round message …\nRoles in the EC J-PAKE exchange\n&lt; Client\n&lt; Undefined\n&lt; Server\n\\brief          Checkup routine\n\\brief               Set the point format for future reads …\n\\brief           Set up an ECJPAKE context for use.\n\\brief           Generate and write the first round message\n\\brief           Generate and write the second round …\n\\brief           Write the shared key material to be …\n\\brief           This function checks that an \\c …\n\\brief           This function checks that the keypair …\n\\brief           This function checks that a point is a …\n\\brief           This function copies the contents of …\nCurve information, for use by other modules.\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves curve information …\n\\brief           This function retrieves the information …\n\\brief           This function exports generic key-pair …\n\\brief           This function generates an ECP key.\n\\brief           This function generates an ECP keypair.\n\\brief           This function generates a keypair with a …\n\\brief           This function generates a private key.\n\\brief           The ECP group structure.\n\\brief           This function copies the contents of …\n\\brief           This function frees the components of an …\nDomain-parameter identifiers: curve, subgroup, and …\n&lt; Domain parameters for 256-bit Brainpool curve.\n&lt; Domain parameters for 384-bit Brainpool curve.\n&lt; Domain parameters for 512-bit Brainpool curve.\n&lt; Domain parameters for Curve25519.\n&lt; Domain parameters for Curve448.\n&lt; Curve not defined.\n&lt; Domain parameters for 192-bit “Koblitz” curve.\n&lt; Domain parameters for the 192-bit curve defined by FIPS …\n&lt; Domain parameters for 224-bit “Koblitz” curve.\n&lt; Domain parameters for the 224-bit curve defined by FIPS …\n&lt; Domain parameters for 256-bit “Koblitz” curve.\n&lt; Domain parameters for the 256-bit curve defined by FIPS …\n&lt; Domain parameters for the 384-bit curve defined by FIPS …\n&lt; Domain parameters for the 521-bit curve defined by FIPS …\n\\brief           This function initializes an ECP group …\n\\brief           This function sets up an ECP group context\n\\brief           This function retrieves the list of …\n\\brief           This function checks if a point is the …\n\\brief    The ECP key-pair structure.\n\\brief          Calculate the public key from a private …\n\\brief           This function frees the components of a …\n\\brief          Query the group that a key pair belongs to.\n\\brief           This function initializes a key pair as …\n\\brief           This function performs a scalar …\n\\brief           This function performs multiplication of …\n\\brief           This function performs multiplication and …\n\\brief           This function performs multiplication and …\n\\brief           The ECP point structure, in Jacobian …\n\\brief           This function compares two points.\n\\brief           This function frees the components of a …\n\\brief           This function initializes a point as zero.\n\\brief           This function imports a point from …\n\\brief           This function imports a non-zero point …\n\\brief           This function exports a point into …\n\\brief           This function reads an elliptic curve …\n\\brief          The ECP checkup routine.\n\\brief          Set the public key in a key pair object.\n\\brief           This function sets a point to the point …\n\\brief           This function sets up an ECP group …\n\\brief           This function extracts an elliptic curve …\n\\brief           This function imports a point from a TLS …\n\\brief           This function exports an elliptic curve …\n\\brief           This function exports a point as a TLS …\n\\brief           This function exports an elliptic curve …\n\\brief           This function exports an elliptic curve …\n\\brief           Adds an entropy source to poll …\n\\brief           Entropy context structure\n\\brief           Entropy poll callback pointer\n\\brief           Free the data in the context\n\\brief           Retrieve entropy from the accumulator …\n\\brief           Trigger an extra gather poll for the …\n\\brief           Initialize the context\n\\brief          Checkup routine\n\\brief          Checkup routine\n\\brief           Entropy source state\n\\brief           Add data to the accumulator manually …\n\\brief               Read and update a seed file. Seed is …\n\\brief               Write a seed file\n\\brief          The GCM context structure.\nWhen the MBEDTLS_GCM_NON_AES_CIPHER_SOFT_FALLBACK is …\n\\brief          The GCM checkup routine.\n\\brief Translate the high-level part of an Mbed TLS error …\n\\brief          RIPEMD-160 process data block (internal …\n\\brief          SHA-1 process data block (internal use …\n\\brief          This function processes a single data …\n\\brief          This function processes a single data …\n\\brief Translate the low-level part of an Mbed TLS error …\n\\brief          This function calculates the …\n\\brief          Output = MD5( input buffer )\n@brief Type defined for MD5 context\n\\brief          Checkup routine\n\\brief          MD5 context setup\n\\brief           This function clones the state of a …\nThe generic message-digest context.\nUsed internally to indicate whether a context uses legacy …\n\\brief          This function calculates the …\n\\brief           This function finishes the digest …\n\\brief           This function clears the internal …\n\\brief           This function returns the name of the …\n\\brief           This function extracts the message-digest …\n\\brief           This function extracts the message-digest …\n\\brief          This function calculates the full generic …\n\\brief           This function finishes the HMAC …\n\\brief           This function prepares to authenticate a …\n\\brief           This function sets the HMAC key and …\n\\brief           This function feeds an input buffer into …\n\\brief           This function returns the message-digest …\n\\brief           This function returns the message-digest …\n\\brief           This function returns the message-digest …\n\\brief           This function initializes a …\n\\brief           This function returns the list of digests …\n\\brief           This function selects the message digest …\n\\brief           This function starts a message-digest …\n\\brief     Supported message digests.\n&lt; The MD5 message digest.\n&lt; None.\n&lt; The RIPEMD-160 message digest.\n&lt; The SHA-1 message digest.\n&lt; The SHA-224 message digest.\n&lt; The SHA-256 message digest.\n&lt; The SHA-384 message digest.\n&lt; The SHA3-224 message digest.\n&lt; The SHA3-256 message digest.\n&lt; The SHA3-384 message digest.\n&lt; The SHA3-512 message digest.\n&lt; The SHA-512 message digest.\n\\brief           This function feeds an input buffer into …\n\\brief          MPI structure\n\\brief          Perform an unsigned addition of MPIs: X = …\n\\brief          Perform a signed addition of an MPI and an …\n\\brief          Perform a signed addition of MPIs: X = A + …\n\\brief          Return the number of bits up to and …\n\\brief          Compare the absolute values of two MPIs.\n\\brief          Compare an MPI with an integer.\n\\brief          Compare two MPIs.\n\\brief          Make a copy of an MPI.\n\\brief          Perform a division with remainder of an …\n\\brief          Perform a division with remainder of two …\n\\brief          Perform a modular exponentiation: X = A^E …\n@brief          Perform a sliding-window exponentiation: X …\n\\brief          Fill an MPI with a number of random bytes.\n\\brief          This function frees the components of an …\n\\brief          Compute the greatest common divisor: G = …\n\\brief          Generate a prime number.\n\\brief Flags for mbedtls_mpi_gen_prime()\n&lt; (X-1)/2 is prime too\n&lt; lower error rate from 2-80 to 2-128\n\\brief          Get a specific bit from an MPI.\n\\brief          Enlarge an MPI to the specified number of …\n\\brief           Initialize an MPI context.\n\\brief          Compute the modular inverse: X = A^-1 mod N\n\\brief          Miller-Rabin primality test.\n\\brief          Return the number of bits of value \\c 0 …\n\\brief          Store integer value in MPI.\n\\brief          Check if an MPI is less than the other in …\n\\brief          Perform a modular reduction with respect …\n\\brief          Perform a modular reduction. R = A mod B\n\\brief          Perform a multiplication of an MPI with an …\n\\brief          Perform a multiplication of two MPIs: X = …\nGenerate a random number uniformly in a range.\n\\brief          Import an MPI from unsigned big endian …\n\\brief          Import X from unsigned binary data, little …\n\\brief          Read an MPI from a line in an opened file.\n\\brief          Import an MPI from an ASCII string.\n\\brief          Perform a safe conditional copy of MPI …\n\\brief          Perform a safe conditional swap which doesn…\n\\brief          Checkup routine\n\\brief          Modify a specific bit in an MPI.\n\\brief          Perform a left-shift on an MPI: X &lt;&lt;= count\n\\brief          Perform a right-shift on an MPI: X &gt;&gt;= …\n\\brief          This function resizes an MPI downwards, …\n\\brief          Return the total size of an MPI value in …\n\\brief          Perform an unsigned subtraction of MPIs: X …\n\\brief          Perform a signed subtraction of an MPI and …\n\\brief          Perform a signed subtraction of MPIs: X = …\n\\brief          Swap the contents of two MPIs.\n\\brief          Export X into unsigned binary data, big …\n\\brief          Export X into unsigned binary data, little …\n\\brief          Export an MPI into an opened file.\n\\brief          Export an MPI to an ASCII string.\n\\brief   Get time in milliseconds.\nType of operation.\n\\brief           Tell if a context can do the operation …\n\\brief           Check if a public-private pair of keys …\n\\brief           Public key container\n\\brief           Create a PK context starting from a key …\n\\brief           Create a PK context for the public key of …\n\\brief           Export debug information\n\\brief           Item to send to the debug module\n\\brief           Types for interfacing with the debug …\n\\brief           Decrypt message (including padding if …\n\\brief           Encrypt message (including padding if …\n\\brief           Free the components of a …\n\\brief           Get the size in bits of the underlying key\n\\brief           Access the type name\n\\brief           Determine valid PSA attributes that can …\n\\brief           Get the key type\n\\brief           Import a key into the PSA key store.\n\\brief           Return information associated with the …\n\\brief           Initialize a #mbedtls_pk_context (as …\n\\ingroup pk_module <em>/ /</em>* \\brief           Parse a private …\n\\ingroup pk_module <em>/ /</em>* \\brief           Load and parse a …\n\\ingroup pk_module <em>/ /</em>* \\brief           Parse a public …\n\\ingroup pk_module <em>/ /</em>* \\brief           Load and parse a …\n\\brief           Parse a SubjectPublicKeyInfo DER structure\n\\brief           Types for RSA-alt abstraction\n\\brief           Options for RSASSA-PSS signature …\n\\brief           Initialize a PK context with the …\n\\brief           Initialize an RSA-alt context\n\\brief           Make signature, including padding if …\n\\brief           Make signature given a signature type.\n\\brief           Restartable version of \\c …\n\\brief          Public key types\n\\brief           Verify signature (including padding if …\n\\brief           Verify signature, with options. (Includes …\n\\brief           Restartable version of \\c …\n\\brief           Write a private key to a PKCS#1 or SEC1 …\n\\brief           Write a private key to a PKCS#1 or SEC1 …\n\\brief           Write a subjectPublicKey to ASN.1 data …\n\\brief           Write a public key to a …\n\\brief           Write a public key to a PEM string\n\\brief       Securely zeroize a buffer\n\\brief           This function generates the Poly1305 …\n\\brief           This function releases and clears the …\n\\brief           This function initializes the specified …\n\\brief           This function calculates the Poly1305 MAC …\n\\brief           The Poly1305 checkup routine.\n\\brief           This function sets the one-time …\n\\brief           This functions feeds an input buffer into …\n\\brief Library deinitialization.\n\\brief Get statistics about resource consumption related …\n\\brief Inject an initial entropy seed for the random …\n\\brief Statistics about resource consumption related to …\n\\brief Statistics about resource consumption related to …\n\\brief          Output = RIPEMD-160( input buffer )\n\\brief          Clone (the state of) a RIPEMD-160 context\n\\brief          RIPEMD-160 context structure\n\\brief          RIPEMD-160 final digest\n\\brief          Clear RIPEMD-160 context\n\\brief          Initialize RIPEMD-160 context\n\\brief          Checkup routine\n\\brief          RIPEMD-160 context setup\n\\brief          RIPEMD-160 process buffer\n\\brief      This function checks if a context contains an …\n\\brief          This function checks a public-private RSA …\n\\brief          This function checks if a context contains …\n\\brief          This function completes an RSA context from\n\\brief   The RSA context structure.\n\\brief          This function copies the components of an …\n\\brief          This function exports the core parameters …\n\\brief          This function exports CRT parameters of a …\n\\brief          This function exports core parameters of …\n\\brief          This function frees the components of an …\n\\brief          This function generates an RSA keypair.\n\\brief          This function retrieves the length of the …\n\\brief          This function retrieves the length of RSA …\n\\brief          This function retrieves hash identifier of …\n\\brief          This function retrieves padding mode of …\n\\brief          This function imports a set of core …\n\\brief          This function imports core RSA parameters, …\n\\brief          This function initializes an RSA context.\n\\brief          This function performs an RSA operation, …\n\\brief          This function adds the message padding, …\n\\brief          This function performs a private RSA …\n\\brief          This function performs a public RSA …\n\\brief          This function performs an RSA private key …\n\\brief          This function performs an RSA public key …\n\\brief            This function performs a PKCS#1 v2.1 …\n\\brief            This function performs a PKCS#1 v2.1 …\n\\brief          This function performs a PKCS#1 v1.5 …\n\\brief          This function performs a PKCS#1 v1.5 …\n\\brief          This function performs a PKCS#1 v1.5 …\n\\brief          This function performs a PKCS#1 v1.5 …\n\\brief          This function performs a PKCS#1 v2.1 PSS …\n\\brief          This function performs a PKCS#1 v2.1 PSS …\n\\brief          This function performs a PKCS#1 v2.1 PSS …\n\\brief          This function performs a PKCS#1 v2.1 PSS …\n\\brief          The RSA checkup routine.\n\\brief          This function sets padding for an already …\n\\brief          This function calculates the SHA-1 …\n\\brief          This function clones the state of a SHA-1 …\n\\brief          SHA-1 context structure\n\\brief          This function finishes the SHA-1 …\n\\brief          This function clears a SHA-1 context.\n\\brief          This function initializes a SHA-1 context.\n\\brief          The SHA-1 checkup routine.\n\\brief          This function starts a SHA-1 checksum …\n\\brief          This function feeds an input buffer into …\n\\brief          The SHA-224 checkup routine.\n\\brief          This function calculates the SHA-224 or …\n\\brief          This function clones the state of a …\n\\brief          SHA-256 context structure\n\\brief          This function finishes the SHA-256 …\n\\brief          This function clears a SHA-256 context.\n\\brief          This function initializes a SHA-256 …\n\\brief          The SHA-256 checkup routine.\n\\brief          This function starts a SHA-224 or SHA-256 …\n\\brief          This function feeds an input buffer into …\n\\brief          This function calculates the SHA-3 …\n\\brief          The SHA-384 checkup routine.\n\\brief          This function clones the state of a SHA-3 …\n\\brief          The SHA-3 context structure.\n\\brief          This function finishes the SHA-3 …\n\\brief          This function clears a SHA-3 context.\nSHA-3 family id.\n&lt; SHA3-224\n&lt; SHA3-256\n&lt; SHA3-384\n&lt; SHA3-512\n&lt; Operation not defined.\n\\brief          This function initializes a SHA-3 context.\n\\brief          Checkup routine for the algorithms …\n\\brief          This function starts a SHA-3 checksum …\n\\brief          This function feeds an input buffer into …\n\\brief          This function calculates the SHA-512 or …\n\\brief          This function clones the state of a …\n\\brief          The SHA-512 context structure.\n\\brief          This function finishes the SHA-512 …\n\\brief          This function clears a SHA-512 context.\n\\brief          This function initializes a SHA-512 …\n\\brief          The SHA-512 checkup routine.\n\\brief          This function starts a SHA-384 or SHA-512 …\n\\brief          This function feeds an input buffer into …\n\\brief          Callback type: server-side session cache …\n\\brief          Callback type: server-side session cache …\n\\brief          Check if there is data already read from …\n\\brief          Check whether a buffer contains a valid …\n\\brief   This structure is used for storing ciphersuite …\n\\brief          Notify the peer that the connection is …\n\\brief          Set the supported Application Layer …\n\\brief          Set the certificate verification mode …\n\\brief          Set the data required to verify peer …\n\\brief          Set the X.509 security profile used for …\n\\brief          Whether to send a list of acceptable CAs in\n\\brief               Set the list of allowed ciphersuites …\n\\brief          Set the debug callback\n\\brief          Set a limit on the number of records with …\n\\brief           Enable or disable Encrypt-then-MAC …\n\\brief          Set the current endpoint type\n\\brief           Enable or disable Extended Master Secret …\n\\brief          Set the allowed groups in order of …\n\\brief          Prevent or allow legacy renegotiation. …\n\\brief          Set the maximum fragment length to emit …\n\\brief          Set own certificate chain and private key\n\\brief          Pick the ciphersuites order according to …\n\\brief          Set the timeout period for …\n\\brief          Enable / Disable renegotiation support for …\n\\brief          Enforce renegotiation requests. (Default: …\n\\brief          Set record counter threshold for periodic …\n\\brief          Set the random number generator callback\n\\brief          Set the session cache callbacks …\n\\brief          Enable / Disable TLS 1.2 session tickets …\n\\brief           Configure SSL session ticket callbacks …\n\\brief          Configure allowed signature algorithms for …\n\\brief          Set server side ServerName TLS extension …\n\\brief           Set the transport type (TLS or DTLS). …\n\\brief          Set the verification callback (Optional).\nSSL/TLS configuration to be shared between …\n\\brief          Load reasonable default SSL configuration …\n\\brief          Free an SSL configuration context\n\\brief          Initialize an SSL configuration context …\n\\brief          Callback type: verify a cookie\n\\brief          Callback type: generate a cookie\n\\brief           Callback type: Export key alongside …\n\\brief          Free referenced items in an SSL context …\n\\brief          Get the name of the negotiated Application …\n\\brief          Return the number of application data bytes\n\\brief          Return the name of the current ciphersuite\n\\brief               Return the ID of the ciphersuite …\n\\brief          Return the id of the current ciphersuite\n\\brief               Return the name of the ciphersuite …\n\\brief          Retrieve SNI extension value for the …\n\\brief          Return the current maximum incoming record …\n\\brief          Return the current maximum outgoing record …\n\\brief          Return the peer certificate from the …\n\\brief          Return the (maximum) number of bytes added …\n\\brief          Export a session in order to resume it …\n\\brief          Callback type: get status of timers/delays\n\\brief          Return the result of the certificate …\n\\brief          Return the current TLS version\n\\brief          Perform the SSL handshake\n\\brief          Perform a single step of the SSL handshake\n\\brief           Callback type: generic handshake callback\n\\brief          Initialize an SSL context Just makes the …\nHuman-friendly representation of the (D)TLS protocol …\n&lt; (D)TLS 1.2\n&lt; (D)TLS 1.3\n&lt; Context not in use or version not yet negotiated.\n\\brief          Read at most ‘len’ application data …\n\\brief          Callback type: receive data from the …\n\\brief          Callback type: receive data from the …\n\\brief          Initiate an SSL renegotiation on the …\n\\brief           Send an alert message\n\\brief          Callback type: send data on the network.\n\\brief          Free referenced items in an SSL session …\n\\brief          Initialize SSL session structure\n\\brief          Load serialized session data into a …\n\\brief          Reset an already initialized SSL context …\n\\brief          Save session structure as serialized data …\n\\brief          Set the underlying BIO callbacks for …\n\\brief   Configure a key export callback. (Default: none.)\n\\brief          Set or reset the hostname to check against …\n\\brief          Set authmode for the current handshake.\n\\brief          Set the data required to verify peer …\n\\brief          Set DN hints sent to client in …\n\\brief          Set own certificate and key for the …\n\\brief          Load a session for session resumption.\n\\brief          Set the timer callbacks (Mandatory for …\n\\brief          Callback type: set a pair of timers/delays …\n\\brief          Set a connection-specific verification …\n\\brief          Set up an SSL context for use\n\\brief           Callback type: parse and load session …\n\\brief           Callback type: generate and write session …\n\\brief          TLS-PRF function for key derivation.\n\\brief          Try to write exactly ‘len’ application …\n\\brief Translate an Mbed TLS error code into a string …\nContainer for ASN1 bit strings.\nType-length-value structure that allows for ASN1 using DER.\nCertificate revocation list structure. Every CRL may have …\nCertificate revocation list entry. Contains the …\n\\brief          Unallocate all CRL data\n\\brief          Returns an informational string about the …\n\\brief          Initialize a CRL (chain)\n\\brief          Parse one or more CRLs and append them to …\n\\brief          Parse a DER-encoded CRL and append it to …\n\\brief          Load one or more CRLs and append them to …\nContainer for an X.509 certificate. The certificate may be …\n\\brief               The type of trusted certificate …\n\\brief           Check usage of certificate against …\n\\brief          Check usage of certificate against …\n\\brief          The type of certificate extension …\n\\brief          Unallocate all certificate data\n\\brief               Access the ca_istrue field\n\\brief          Returns an informational string about the …\n\\brief          Initialize a certificate (chain)\n\\brief          Verify the certificate revocation status\n\\brief          Parse one DER-encoded or one or more …\n\\brief          This function parses a CN string as an IP …\n\\brief          Parse a single DER formatted certificate …\n\\brief          Parse a single DER formatted certificate …\n\\brief            Parse a single DER formatted certificate …\n\\brief          Load one or more certificates and add them …\n\\brief          Load one or more certificate files from a …\nSecurity profile for certificate verification.\nDefault security profile. Should provide a good balance …\nExpected next default profile. Recommended for new …\nEmpty profile that allows nothing. Useful as a basis for …\nNSA Suite B profile.\n\\brief          Verify a chain of certificates.\nVerification chain as built by \\c …\nItem in a verification chain: cert and flags for it\n\\brief          Returns an informational string about the …\n\\brief          Restartable version of \\c …\n\\brief          Verify a chain of certificates with …\n\\brief          Store the certificate DN in printable form …\n\\brief          Unallocate all data related to subject …\nContainer for ASN1 named information objects. It allows …\n\\brief          This function parses an item in the …\nFrom RFC 5280 section 4.2.1.6: OtherName ::= SEQUENCE { …\nFrom RFC 4108 section 5: HardwareModuleName ::= SEQUENCE { …\nContainer for a sequence of ASN.1 items\n\\brief          Store the certificate serial in printable …\n\\brief            Convert the certificate DN string \\p …\nA structure for holding the parsed Subject Alternative …\nContainer for date and time (precision in seconds).\n\\brief          Compare pair of mbedtls_x509_time.\n\\brief          Check a given mbedtls_x509_time against …\n\\brief          Check a given mbedtls_x509_time against …\nContainer for writing a certificate (CRT)\n\\brief           Write a built up certificate to a X509 …\n\\brief           Free the contents of a CRT write context\n\\brief           Initialize a CRT writing context\n\\brief           Write a built up certificate to a X509 …\n\\brief           Set the authorityKeyIdentifier extension …\n\\brief           Set the basicConstraints extension for a …\n\\brief           Set the Extended Key Usage Extension …\n\\brief           Generic function to add to or replace an …\n\\brief           Set the issuer key used for signing the …\n\\brief           Set the issuer name for a Certificate …\n\\brief           Set the Key Usage Extension flags (e.g. …\n\\brief           Set the MD algorithm to use for the …\n\\brief           Set the Netscape Cert Type flags (e.g. …\n\\brief           Set the serial number for a Certificate.\n\\brief           Set Subject Alternative Name\n\\brief           Set the subject public key for the …\n\\brief           Set the subjectKeyIdentifier extension …\n\\brief           Set the subject name for a Certificate …\n\\brief           Set the validity period for a Certificate …\n\\brief           Set the version for a Certificate …\n&lt; MCK pin, output\n&lt; MCK pin, output by default, input if the clock source is …\n&lt; MCK pin, output by default, input if the clock source is …\n&lt; The multiple of I2S master clock(MCLK) to sample rate\n&lt; The multiple of I2S master clock(MCLK) to sample rate\n&lt; The multiple of MCLK to the sample rate\n&lt; The multiple of MCLK to the sample rate Default is 256 …\n&lt; The multiple of MCLK to the sample rate, only take …\n@brief MCPWM brake configuration structure\n@brief MCPWM operator brake event callback function\n@brief MCPWM brake event data\n@brief Type of MCPWM capture channel handle\n@brief Type of MCPWM capture timer handle\n@brief MCPWM capture channel configuration structure\nExtra configuration flags for capture channel\n@brief Disable MCPWM capture channel\n@brief Enable MCPWM capture channel\n@brief Set event callbacks for MCPWM capture channel\n@brief Trigger a catch by software\n@brief MCPWM capture edge\n&lt; Capture on the negative edge\n&lt; Capture on the positive edge\n@brief Group of supported MCPWM capture event callbacks …\n@brief MCPWM capture event callback function\n@brief MCPWM capture event data\n@brief MCPWM capture timer configuration structure\n@brief Disable MCPWM capture timer\n@brief Enable MCPWM capture timer\n@brief Get MCPWM capture timer resolution, in Hz\n@brief Set sync phase for MCPWM capture timer\n@brief Start MCPWM capture timer\n@brief Stop MCPWM capture timer\n@brief MCPWM Capture timer sync phase configuration\n@brief MCPWM carrier configuration structure\n@brief MCPWM event comparator ETM event configuration\n@brief Type of MCPWM comparator handle\n@brief MCPWM comparator configuration\n@brief MCPWM comparator specific events that supported by …\n&lt; The count value equals the value of comparator\n&lt; Maximum number of comparator events\n@brief Group of supported MCPWM compare event callbacks …\n@brief Get the ETM event for MCPWM comparator\n@brief Set event callbacks for MCPWM comparator\n@brief Set MCPWM comparator’s compare value\n@brief MCPWM comparator event callback function\n@brief MCPWM compare event data\n@brief MCPWM dead time configuration structure\n@brief Delete MCPWM capture channel\n@brief Delete MCPWM capture timer\n@brief Delete MCPWM comparator\n@brief Delete MCPWM fault\n@brief Delete MCPWM generator\n@brief Delete MCPWM operator\n@brief Delete MCPWM sync source\n@brief Delete MCPWM timer\n@brief Group of supported MCPWM fault event callbacks …\n@brief MCPWM fault event callback function\n@brief MCPWM fault event data\n@brief Type of MCPWM fault handle\n@brief Set event callbacks for MCPWM fault\n@brief Generator action on specific brake event\n@brief Generator action on specific comparator event\n@brief Generator action on specific fault event\n@brief Type of MCPWM generator handle\n@brief Generator action on specific sync event\n@brief Generator action on specific timer event\n@brief MCPWM generator actions\n&lt; Generator action: Force to high level\n&lt; Generator action: Keep the same level\n&lt; Generator action: Force to low level\n&lt; Generator action: Toggle level\n@brief MCPWM generator configuration\n@brief Set generator action on MCPWM brake event\n@brief Set generator action on MCPWM compare event\n@brief Set generator action on MCPWM Fault event\n@brief Set generator action on MCPWM Sync event\n@brief Set generator action on MCPWM timer event\n@brief Set generator actions on multiple MCPWM brake events\n@brief Set generator actions on multiple MCPWM compare …\n@brief Set generator actions on multiple MCPWM timer events\n@brief Set dead time for MCPWM generator\n@brief Set force level for MCPWM generator\n@brief MCPWM GPIO fault configuration structure\n@brief MCPWM GPIO sync source configuration\n@brief Create MCPWM capture channel\n@brief Create MCPWM capture timer\n@brief Create MCPWM comparator\n@brief Allocate MCPWM generator from given operator\n@brief Create MCPWM GPIO fault\n@brief Create MCPWM GPIO sync source\n@brief Create MCPWM operator\n@brief Create MCPWM software fault\n@brief Create MCPWM software sync source\n@brief Create MCPWM timer\n@brief Create MCPWM timer sync source\n@brief Type of MCPWM operator handle\n@brief Apply carrier feature for MCPWM operator\n@brief MCPWM operator brake mode\n&lt; Brake mode: CBC (cycle by cycle)\n&lt; MCPWM operator invalid brake mode\n&lt; Brake mode: OST (one shot)\n@brief MCPWM operator configuration\n@brief Connect MCPWM operator and timer, so that the …\n@brief Group of supported MCPWM operator event callbacks …\n@brief Try to make the operator recover from fault\n@brief Set event callbacks for MCPWM operator\n@brief Set brake method for MCPWM operator\n@brief Activate the software fault, trigger the fault …\n@brief MCPWM software fault configuration structure\n@brief Activate the software sync, trigger the sync event …\n@brief MCPWM software sync configuration structure\n@brief Type of MCPWM sync handle\n@brief MCPWM timer configuration\n@brief MCPWM timer count modes\n&lt; MCPWM timer counting down\n&lt; MCPWM timer paused\n&lt; MCPWM timer counting up\n&lt; MCPWM timer counting up and down\n@brief MCPWM timer count direction\n&lt; Counting direction: Decrease\n&lt; Counting direction: Increase\n@brief Disable MCPWM timer\n@brief Enable MCPWM timer\n@brief Group of supported MCPWM timer event callbacks …\n@brief MCPWM timer event callback function\n@brief MCPWM timer event data\n@brief MCPWM timer events\n&lt; MCPWM timer counts to zero (i.e. counter is empty)\n&lt; MCPWM timer counts to peak (i.e. counter is full)\n&lt; MCPWM timer invalid event\n@brief Type of MCPWM timer handle\n@brief Set event callbacks for MCPWM timer\n@brief Set a new period for MCPWM timer\n@brief Set sync phase for MCPWM timer\n@brief Send specific start/stop commands to MCPWM timer\n@brief MCPWM timer commands, specify the way to start or …\n&lt; MCPWM timer starts couting, and don’t stop until …\n&lt; MCPWM timer starts counting and stops when next count …\n&lt; MCPWM timer starts counting and stops when next count …\n&lt; MCPWM timer stops when next count reaches zero\n&lt; MCPWM timer stops when next count reaches peak\n@brief MCPWM Timer sync phase configuration\n@brief MCPWM timer sync source configuration\n@brief Type defined for MD5 context\n&lt; MD5 hash callback function for data vector\n&lt;  medium RSSI threshold, used to determine whether the …\n&lt; RMT memory block number\n&lt; Size of memory block, in number of <code>rmt_symbol_word_t</code>, …\n&lt; Size of memory block, in number of <code>rmt_symbol_word_t</code>, …\nMemory pool descriptor\nCreate the list of all memory pools managed by memp. …\n@brief Mesh address\n&lt; mesh softAP configuration\n@brief Mesh softAP configuration\n@brief Mesh networking IE\n@brief Mesh initialization configuration\n@brief Mesh chain assoc\n@brief Mesh chain layer\n@brief The crypto callback function structure used in mesh …\n@brief Mesh data for esp_mesh_send() and esp_mesh_recv()\n@brief Mesh disconnect reason code\n&lt; cyclic is detected\n&lt; in different mesh ID\n&lt; use an empty password to connect to an encrypted parent\n&lt; unknown IE\n&lt; the connected device is changed to a leaf\n&lt; parent is idle\n&lt; parent has stopped the mesh\n&lt; connect to an unencrypted parent/router\n&lt; parent with very poor RSSI\n&lt; root conflict is detected\n&lt; scan fail\n&lt; waive root\n@brief Channel switch information\n@brief Child connected information\n@brief Child disconnected information\n@brief Parent connected information\n@brief Parent disconnected information\n@brief find a mesh network that this device can join\n&lt; channel switch\n&lt; a child is connected on softAP interface\n&lt; a child is disconnected on softAP interface\n&lt; when the channel field in mesh configuration is set to …\n&lt; layer changes over the mesh network\n&lt; network state, such as whether current mesh network has …\n&lt; no parent found\n&lt; parent is connected on station interface\n&lt; parent is disconnected on station interface\n&lt; child duty\n&lt; device duty\n&lt; parent duty\n&lt; the root address is obtained. It is posted by mesh stack …\n&lt; the root is asked yield by a more powerful existing …\n&lt; when devices join a network, if the setting of Fixed …\n&lt; root switch acknowledgment responds the above request …\n&lt; root switch request sent from a new voted root candidate\n&lt; if users specify BSSID of the router in mesh …\n&lt; routing table is changed by adding newly joined children\n&lt; routing table is changed by removing leave children\n&lt; if self-organized networking is disabled, user can call …\n&lt; mesh is started\n&lt; mesh is stopped\n&lt; the root stops reconnecting to the router and non-root …\n&lt; state represents whether the root is able to access …\n&lt; the process of voting a new root is started either by …\n&lt; the process of voting a new root is stopped\n@brief Mesh event information\n@brief Layer change information\n@brief Network state information\n@brief No parent found information\n@brief PS duty information\n@brief Root address\n@brief Other powerful root address\n@brief Root fixed\n@brief Root switch request information\n@brief New router information\n@brief Routing table change\n@brief Scan done　event information\n@brief The reachability of the root to a DS (distribute …\n&lt; the root is able to access external IP network\n&lt; the root isn’t able to access external IP network\n@brief vote started information\n&lt; mesh ID, only the same mesh id can form a unified mesh …\n&lt; mesh network identification\n@brief Mesh option\n@brief Protocol of transmitted application data\n&lt; IP network mesh communication of node’s AP interface\n&lt; binary\n&lt; HTTP protocol\n&lt; JSON format\n&lt; MQTT protocol\n&lt; IP network mesh communication of node’s STA interface\n@brief Vote address configuration\n@brief Router configuration\n@brief Mesh RSSI threshold\n@brief The number of packets available in the queue …\n@brief Mesh switch parent\n@brief For reliable transmission, mesh stack provides …\n&lt; no retransmission on mesh stack\n&lt; provide E2E (end-to-end) retransmission on mesh stack …\n&lt; provide P2P (point-to-point) retransmission on mesh …\n@brief The number of packets pending in the queue waiting …\n&lt; mesh device type, include idle, root, node, etc, refer …\n@brief Device type\n&lt; hasn’t joined the mesh network yet\n&lt; has no forwarding ability\n&lt; intermediate device. Has the ability to forward packets …\n&lt; the only sink of the mesh network. Has the ability to …\n&lt; connect to router with a standalone Wi-Fi station mode, …\n@brief Vote reason\n&lt; vote is initiated by children\n&lt; vote is initiated by the root\n@brief Vote\n&lt; timeout for retransmitting of failed packet\n&lt; The type of HTTP request, -1 if unsupported method, …\n&lt; Method supported by the URI, HTTP_ANY for wildcard …\n&lt; HTTP Method\n&lt; The type of HTTP request, -1 if unsupported method, …\n&lt; Method supported by the URI, HTTP_ANY for wildcard …\n&lt; manufacturer identification number\nThe digest to use for MGF1 in PSS.\n&lt; management queue\n&lt; WiFi management short buffer number, the minimum value …\n&lt; Minimum active scan time per channel, units: millisecond\n&lt; Time.\n&lt; Minimal chip revision supported by image After the Major …\n&lt; Minimal chip revision supported by image, in format: …\n&lt; Minimum amount of free space, in RMT symbols, the …\n&lt; Minimal eFuse block revision supported by image, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; Minimum CPU frequency to use when no locks are taken, in …\n&lt; The min value of the integral part, integer range: […\n&lt;  Lifetime minimum free heap size. Equivalent to …\n&lt; mip address\n&lt; mip address\n@brief MIPI DSI Data Type (DT)\n&lt; Blanking Packet, no data\n&lt; Color Mode Off\n&lt; Color Mode On\n&lt; DCS Long Write\n&lt; DCS Read, with no parameter\n&lt; DCS Short Write, with no parameter\n&lt; DCS Short Write, with 1 byte parameter\n&lt; End of Transmission\n&lt; Generic Long Write\n&lt; Generic Read Request, with no parameter\n&lt; Generic Read Request, with 1 byte parameter\n&lt; Generic Read Request, with 2 byte parameter\n&lt; Generic Short Write, with no parameter\n&lt; Generic Short Write, with 1 byte parameter\n&lt; Generic Short Write, with 2 byte parameter\n&lt; H Sync End\n&lt; H Sync Start\n&lt; Loosely Pixel Stream, RGB666\n&lt; Null Packet, no data\n&lt; Packed Pixel Stream, RGB565\n&lt; Packed Pixel Stream, RGB666\n&lt; Packed Pixel Stream, RGB888\n&lt; Set Maximum Return Packet Size\n&lt; Shutdown Peripheral\n&lt; Turn On Peripheral\n&lt; V Sync End\n&lt; V Sync Start\n@brief The kind of test pattern that can be generated by …\n&lt; Horizontal BAR pattern, with different colors\n&lt; Vertical BAR pattern, with different colors\n&lt; Vertical Bit Error Rate(BER) pattern\n&lt; No pattern\n@brief Mirror the LCD panel on specific axis\n&lt; [out] Input data from slave, little endian\n&lt; GPIO pin for Master In Slave Out (=spi_q) signal, or -1 …\n&lt; Input data length, in bytes\n&lt; mkdir without context pointer\n&lt; mkdir with context pointer\nThis function could be called to add or delete an entry in …\n&lt; MMC version (for CID format)\n&lt;Set filter mode. The input of the filter is the raw value …\n&lt; I2S work mode\n&lt;Set filter mode. The input of the filter is the raw value …\n&lt; SPI mode, representing a pair of (CPOL, CPHA) …\n&lt; GPIO mode: set input/output mode\n&lt; Mode of TWAI controller\n&lt; I2C mode\n&lt; I2S work mode\n&lt; I2S channel communication mode\n&lt; SPI mode, representing a pair of (CPOL, CPHA) …\n&lt; Model name of the device. If empty, the default model …\n&lt; Model number of the device. If empty, the default model …\n&lt; Date.\n&lt; acceptable times of parent networking IE change before …\n&lt; Output data to salve\n&lt; GPIO pin for Master Out Slave In (=spi_d) signal, or -1 …\n&lt; Output data length, in bytes\n&lt; LWT message, may be NULL terminated\n&lt; <em>MQTT</em> messaged id of message\n&lt; LWT message length, if msg isn’t NULL terminated must …\n&lt; Number of messages in RX queue waiting to be read\n&lt; Number of messages queued for transmission or awaiting …\nmaximum transfer unit (in bytes)\nmaximum transfer unit (in bytes), updated by RA\n@brief allocate a chunk of memory with specific alignment\n@brief Perform an aligned allocation from the provided …\n@brief free() a buffer aligned in a given heap.\n@brief Check heap integrity\n@brief Dump heap information to stdout\n@brief free() a buffer in a given heap.\n@brief Return free heap size\n@brief Return the size that a particular pointer was …\n@brief Return metadata about a given heap\n@brief Opaque handle to a registered heap\n@brief Structure to access heap metadata via …\n@brief malloc() a buffer in a given heap\n@brief Return the lifetime minimum free heap size\n@brief realloc() a buffer in a given heap.\n@brief Register a new heap for use\n@brief Reset the minimum_free_bytes value (setting it to …\n@brief Set the value of minimum_free_bytes to …\n@brief Associate a private lock pointer with a heap\n@brief Call the tlsf_walk_pool function of the heap given …\n@brief Callback called when walking the given heap blocks …\n&lt; the number of nodes that voted for me\nName of the handler, which is passed to protocomm layer\n!&lt; Timer name, used in esp_timer_dump() function\n&lt; product name (MMC v1 has the longest)\ndescriptive abbreviation\n&lt; A human-friendly name.\nName of the handler, which is passed to protocomm layer\n@brief   This structure maps handler required by protocomm …\n&lt; Number of namespaces.\n&lt; Namespace to which key-value belong\n&lt; Configuration of NAN\n&lt; Nano option for printf/scan family enable flag\n&lt; For Short Weierstrass: The number of bits in \\p P. For …\n&lt; Total channel number of the allowed 2.4GHz Wi-Fi channels\n&lt; NAN Datapath Identifier\n&lt; NAN Datapath Identifier\n&lt; NDP instance id\n&lt; NDP instance id\n&lt; NDP instance id\n&lt; delay time applied to falling edge, 0 means no falling …\n@brief  Callback function type to get neighbor report\nGeneric data structure used for all lwIP network …\n&lt; netif handle\n&lt; netif handle\nThe default network interface.\n@ingroup netif Argument supplied to netif_ext_callback_fn.\nArgs to …\nArgs to LWIP_NSC_IPV6_ADDR_STATE_CHANGED callback\nArgs to LWIP_NSC_IPV6_SET callback\nArgs to LWIP_NSC_LINK_CHANGED callback\nArgs to LWIP_NSC_STATUS_CHANGED callback\n@ingroup netif Function used for extended netif status …\nFunction prototype for netif igmp_mac_filter functions\nFunction prototype for netif init functions. Set up flags …\nFunction prototype for netif-&gt;input functions. This …\nFunction prototype for netif-&gt;linkoutput functions. Only …\nThe list of network interfaces.\nMAC Filter Actions, these are passed to a netif’s …\nAdd a filter entry\nDelete a filter entry\nFunction prototype for netif mld_mac_filter functions\n@ingroup netif Extended netif status callback (NSC) …\nFunction prototype for netif-&gt;output functions. Called by …\nFunction prototype for netif-&gt;output_ip6 functions. Called …\nFunction prototype for netif status- or link-callback …\n&lt; Interface IPV4 netmask\n&lt; Network configuration\n&lt; network state, such as whether current mesh network has …\n&lt; New home channel of the device\nFunction which is to be called by the manager to generate …\nFunction which is to be called by the manager to generate …\n&lt; new layer\n&lt; New auth mode of AP\n&lt; New second channel of the device\nStarts new secure transport session with specified ID\nStarts new secure transport session with specified ID\nThe next entry in the sequence.\nThe next entry in the sequence.\nnext pbuf in singly linked pbuf chain\nnext pbuf in singly linked pbuf chain\npointer to next in linked list\nThe next entry in the sequence.\nThe next entry in the sequence.\nNext element in the linked list of entries. \\p NULL …\nNext element in the linked list of CRL. \\p NULL indicates …\nNext certificate in the linked list that constitutes the …\n&lt; Indicates no ack required\n&lt; no parent found\n&lt;Noise threshold coefficient. Higher = More noise …\n&lt;Noise threshold coefficient. Higher = More noise …\n&lt; Configure non-blocking mode. If set to true the …\n&lt; Configure non-blocking mode. If set to true the …\n&lt; max non-mesh connections\nPointer to the Name-UUID lookup table\nPointer to the Name-UUID lookup table\nNumber of entries in the Name-UUID lookup table\nNumber of entries in the Name-UUID lookup table\n&lt; number of stations in the list (other entries are …\nnumber of this interface. Used for @ref if_api and @ref …\n&lt; number of preconfigured NTP servers\n&lt; number of preconfigured NTP servers\n&lt; The number of transmitted RMT symbols, including one EOF …\n&lt; The number of received RMT symbols\n&lt; Number of scan results\n&lt; the number of APs scanned\n&lt; Numerator part of division\n@brief      Close the storage handle and free any …\n@brief      Write any pending changes to non-volatile …\n&lt; WiFi NVS flash enable flag\n@brief       Create an iterator to enumerate NVS entries …\n@brief       Create an iterator to enumerate NVS entries …\n@brief       Fills nvs_entry_info_t structure with …\n@brief information about entry obtained from …\n@brief       Advances the iterator to next item matching …\n@brief      Erase all key-value pairs in a namespace\n@brief      Erase key-value pair with given key name.\n@brief      Lookup key-value pair with given key name.\n@brief Deinitialize NVS storage for the default NVS …\n@brief Deinitialize NVS storage for the given NVS partition\n@brief Erase the default NVS partition\n@brief Erase specified NVS partition\n@brief Erase custom partition.\n@brief Generate and store NVS keys in the provided esp …\n@brief Callback function prototype for generating the NVS …\n@brief Generate (and store) the NVS keys using the …\n@brief   Fetch the configuration structure for the default …\n@brief Initialize the default NVS partition.\n@brief Initialize NVS flash storage for the specified …\n@brief Initialize NVS flash storage for the partition …\n&lt;  Callback for the nvs_flash_key_gen implementation\n&lt;  Callback for the nvs_flash_read_keys implementation\n@brief Callback function prototype for reading the NVS …\n@brief Read NVS security configuration from a partition.\n@brief Read NVS security configuration set by the …\n@brief Registers the given security scheme for NVS …\n@brief Initialize the default NVS partition.\n@brief Initialize NVS flash storage for the specified …\n@brief      get blob value for given key\n@brief      get int16_t value for given key\n@brief      get int32_t value for given key\n@brief      get int64_t value for given key\n@{*/ /** @brief      get int8_t value for given key\n@brief      Fill structure nvs_stats_t. It provides info …\n@{*/ /** @brief      get string value for given key\n@brief      get uint16_t value for given key\n@brief      get uint32_t value for given key\n@brief      get uint64_t value for given key\n@brief      get uint8_t value for given key\n@brief      Calculate all entries in a namespace.\nOpaque pointer type representing non-volatile storage …\nOpaque pointer type representing iterator to nvs entries\n@brief      Open non-volatile storage with a given …\n@brief      Open non-volatile storage with a given …\n@brief Mode of opening the non-volatile storage @brief …\n@brief Mode of opening the non-volatile storage\n&lt; Read only\n&lt; Read and write\n@brief       Release iterator\n@brief Key for encryption and decryption\n@brief NVS encryption: Security scheme configuration …\n@brief       set variable length binary value for given key\n@brief      set int16_t value for given key\n@brief      set int32_t value for given key\n@brief      set int64_t value for given key\n@{*/ /** @brief      set int8_t value for given key\n@brief      set string for given key\n@brief      set uint16_t value for given key\n@brief      set uint32_t value for given key\n@brief      set uint64_t value for given key\n@brief      set uint8_t value for given key\n@note Info about storage space NVS.\n@brief Types of variables\n&lt; Must be last\n&lt; Type blob\n&lt; Type int16_t\n&lt; Type int32_t\n&lt; Type int64_t\n&lt; Type int8_t\n&lt; Type string\n&lt; Type uint16_t\n&lt; Type uint32_t\n&lt; Type uint64_t\n&lt; Type uint8_t\n&lt; OCR (Operation Conditions Register) value\n&lt; OEM/product identification number\n&lt; Start address of this region\n&lt; The object identifier.\n&lt; The object identifier.\n&lt; The object identifier.\nOld IPv4 address\nOld IPv6 address\n&lt; Old home channel of the device\n&lt; Old auth mode of AP\n&lt; Old second channel of the device\nOld IPv6 address state\n&lt; One-Key CBC MAC (OMAC1) hash with AES-128 callback …\n&lt; Timer alarm callback\n&lt; callback function when mcpwm operator brakes in CBC\n&lt; callback function when mcpwm operator brakes in OST\n&lt; Callback function that would be invoked when capture …\n&lt; Callback invoked when color data transfer has finished\n&lt; Callback invoked when color data transfer has finished\n&lt; Callback invoked when color data transfer has finished\n&lt; Event callback, invoked when one conversion frame is …\n&lt; callback function when MCPWM timer counts to zero\n&lt; ISR callback function that would be invoked when fault …\n&lt; ISR callback function that would be invoked when fault …\n&lt; callback function when MCPWM timer counts to peak value\n@brief Callback function invoked when lowlevel …\n@brief Callback function invoked when lowlevel …\n@brief Invoked by internal ping thread when a ping session …\n@brief Invoked by internal ping thread when received ICMP …\n@brief Invoked by internal ping thread when receive ICMP …\n&lt; Event callback, invoked when the internal pool is full.\n&lt; allocate DMA from the PSRAM\n&lt; ISR callback function which would be invoked when …\n&lt; Callback of data received event, only for RX channel The …\n&lt; I2C slave receive done callback\n&lt; Event callback, invoked when the RMT channel reception …\n&lt; Callback of receiving queue overflowed event, only for …\n&lt; Callback of sending queue overflowed event, only for TX …\n&lt; Callback of data sent event, only for TX channel The …\n@brief Callback on Ethernet state changed\n@brief Callback on Ethernet state changed\n&lt; callback function when MCPWM timer stops\n&lt; I2C slave stretched callback\n&lt; I2C master transaction finish callback\n&lt; Event callback, invoked when transmission is finished\n&lt; NAN Discovery operating channel\n&lt; SD or MMC command index\n&lt; open without context pointer\nCustom session opening callback.\nCustom session opening callback.\n&lt; open with context pointer\n&lt; opendir without context pointer\n&lt; opendir with context pointer\n&lt; J0 from first iteration.\n&lt; J0 from first iteration.\n&lt; Pointer to os-specific hook structure. Call …\n&lt; Pointer to argument for os-specific hooks. Left NULL and …\n&lt; WiFi OS functions\n&lt; organization identifier, 0x18fe34\n&lt; Color range of the output color\n&lt; size of <em>MQTT</em> output buffer. If not defined, defaults to …\n&lt; Outbox configuration.\nThis function is called by the IP module when it wants to …\nThis function is called by the IPv6 module when it wants …\n&lt; Own NAN Data Interface MAC\n&lt; ASN1 data, e.g. in ASCII.\n&lt; Raw ASN1 data for the bit string\n&lt; ASN1 data, e.g. in ASCII.\n&lt; Raw ASN1 data for the bit string\n&lt; I2S pair channel handle in duplex mode, always NULL in …\n&lt; Pairwise cipher of AP\n&lt; Pairwise cipher of SoftAP, group cipher will be derived …\nPanic with a specific error message of the contained …\n&lt; Event parameter, sometimes without usage, then will be …\n&lt; Event parameter, sometimes without usage, then will be …\n&lt; parent power save duty\n&lt; UART parity mode\n&lt; Enable Firmware image to be downloaded over multiple …\n&lt; Partition of application which worked before goes to the …\n&lt; Optional, label of SPIFFS partition to use. If set to …\n&lt; Passive scan time per channel, units: millisecond, …\n&lt; Passphrase for the AP\n&lt; Password of soft-AP.\n&lt; Password of target AP.\n&lt; Password of the AP. Null terminated string.\n&lt; password\n&lt; mesh softAP password\n&lt; Using for Http authentication\n&lt; <em>MQTT</em> password\n&lt; Password of the AP\n&lt; HTTP Path, if not set, default is <code>/</code>\n&lt; Path in the URI\n&lt; Number of ADC channels that will be used\n&lt; Number of ADC channels that will be used\n&lt; Payload. Length is equal to value in ‘length’ field, …\n&lt; Data or management payload. Length of payload is …\n&lt; payload of the wifi packet\npointer to the actual data in the buffer\npointer to the actual data in the buffer\n&lt; payload len of the wifi packet\n&lt; The number of bits in \\p P.\n&lt; SHA1-based key derivation function (PBKDF2) callback …\nMain packet buffer struct\nThe actual pbuf\nA custom pbuf: like a pbuf, but following a function …\nPrototype for a function to free a custom pbuf\n@ingroup pbuf Enumeration of pbuf layers\nIncludes spare room for IP header. Use this if you intend …\nIncludes spare room for link layer header (ethernet …\nUse this for input packets in a netif driver when calling …\nIncludes spare room for additional encapsulation header …\nIncludes spare room for transport layer header, e.g. UDP …\nHelper struct for const-correctness only. The only meaning …\n@ingroup pbuf Enumeration of pbuf types\npbuf payload refers to RAM. This one comes from a pool and …\npbuf data is stored in RAM, used for TX mostly, struct …\npbuf comes from the pbuf pool. Much like PBUF_ROM but …\npbuf data is stored in ROM, i.e. struct pbuf and its …\n@return The text (human readable) name of the task …\n&lt; A pointer to the task’s name.  This value will be …\n&lt; A pointer to the task’s name.  This value will be …\nReturns the name that was assigned to a timer when the …\n&lt; Frequency of pixel clock\n&lt; I2S PCM a/u-law decompress or compress type\n&lt; ESPNOW peer MAC address that is also the MAC address of …\n&lt; ESPNOW peer MAC address that is also the MAC address of …\n&lt; Peer’s NAN Interface MAC\n&lt; Peer’s service instance id\n&lt; Peer’s Service Identifier\n&lt; Peer’s MAC address\n&lt; Peer’s MAC address\n&lt; Peer’s MAC address\n&lt; Peer’s MAC address\n&lt; MAC address of the FTM Peer\n&lt; Enrollee mac address\n&lt; Enrollee mac address\n&lt; Peer’s NAN Data Interface MAC\n&lt; Peer’s NAN Data Interface MAC\n&lt; Peer’s NAN Management Interface MAC\n&lt; Peer’s NAN Management Interface MAC\n&lt; Peer Service Info\n&lt; vote percentage threshold for approval of being a root\n&lt; Number of count ticks within a period\n&lt; interrupt of AES accelerator, level\n&lt; interrupt of APB ADC, LEVEL\n&lt; interrupt of APB ctrl, ?\n&lt; interrupt of Assist debug module, LEVEL\n&lt; interrupt of BT BB, level\n&lt; interrupt of BT BB, NMI, use if BB have bug to fix in NMI\n&lt; will be cancelled\n&lt; interrupt of Cache Invalied Access, LEVEL\n&lt; interrupt of general DMA channel 0, LEVEL\n&lt; interrupt of general DMA channel 1, LEVEL\n&lt; interrupt of general DMA channel 2, LEVEL\n&lt; interrupt of efuse, level, not likely to use\n&lt; interrupt0 generated from a CPU, level\n&lt; interrupt1 generated from a CPU, level\n&lt; interrupt2 generated from a CPU, level\n&lt; interrupt3 generated from a CPU, level\n&lt; interrupt of GPIO, level\n&lt; interrupt of GPIO, NMI\n&lt; interrupt of I2C controller1, level\n&lt; interrupt of I2C Master, level\n&lt; interrupt of I2S1, level\n&lt; interrupt of ICache perload operation, LEVEL\n&lt; interrupt of instruction cache sync done, LEVEL\n&lt; interrupt of LED PWM, level\n&lt; interrupt of remote controller, level\n&lt; interrupt of RSA accelerator, level\n&lt; interrupt of rtc core, level, include rtc watchdog\n&lt; interrupt of RWBLE, level\n&lt; interrupt of RWBLE, NMI, use if RWBT have bug to fix in …\n&lt; interrupt of RWBT, level\n&lt; interrupt of RWBT, NMI, use if RWBT have bug to fix in …\n&lt; interrupt of SHA accelerator, level\n&lt; interrupt of SLC0, level\n&lt; interrupt of SLC1, level\n&lt; interrupt of SPI1, level, SPI1 is for flash read/write, …\n&lt; interrupt of SPI2, level\n&lt; interrupt of SPI0 Cache access and SPI1 access rejected, …\n&lt; use ETS_SYSTIMER_TARGET0_INTR_SOURCE\n&lt; interrupt of system timer 0\n&lt; use ETS_SYSTIMER_TARGET1_INTR_SOURCE\n&lt; interrupt of system timer 1\n&lt; use ETS_SYSTIMER_TARGET2_INTR_SOURCE\n&lt; interrupt of system timer 2\n&lt; interrupt of TIMER_GROUP0, TIMER0, level\n&lt; interrupt of TIMER_GROUP0, WATCH DOG, level\n&lt; interrupt of TIMER_GROUP1, TIMER0, level\n&lt; interrupt of TIMER_GROUP1, WATCHDOG, level\n&lt; interrupt of can, level\n&lt; interrupt of UART0, level\n&lt; interrupt of UART1, level\n&lt; interrupt of UHCI0, level\n&lt; interrupt of USJ, level\n&lt; interrupt of WiFi BB, level, we can do some calibartion\n&lt; interrupt of WiFi MAC, level\n&lt; interrupt of WiFi MAC, NMI, use if MAC have bug to fix …\n&lt;\n@brief Disable peripheral module by gating the clock and …\n@brief Enable peripheral module by un-gating the clock and …\n@brief Reset peripheral module by asserting and …\n@cond\n@brief Ethernet PHY object\n&lt; PHY address, set -1 to enable PHY address detection at …\n@brief Read PHY register\n@brief Read PHY register\n@brief Write PHY register\n@brief Write PHY register\n&lt; ESPNOW phymode of specified interface\n&lt; ESPNOW phymode of specified interface\n&lt; WPS PIN (Personal Identification Number) used when …\n&lt; GPIO pin: set with bit mask, each bit maps to a GPIO\n&lt; PIN code of station in enrollee mode\n&lt; PIN code of station in enrollee mode\n&lt; The core id to pin the thread to. Has the same value …\n&lt; Container for the public key context.\n&lt; Configuration for Protected Management Frame\n&lt; Configuration for Protected Management Frame. Will be …\n&lt; Country policy\nInternal use, poll the HW until the last operation is done.\nInternal use, poll the HW until the last operation is done.\n&lt; port\n&lt; Port to connect, default depend on …\n&lt; <em>MQTT</em> server port\n&lt; Port on which the HTTP server will listen\n&lt; delay time applied to rising edge, 0 means no rising …\n&lt; post attach function pointer\n&lt; post attach function pointer\n&lt; Callback to be called after a transmission has completed.\n&lt; the idle time(in baud-rate) between the last AT char and …\n&lt; Callback called after the SPI registers are loaded with …\n&lt; Callback called after a transaction is done.\n&lt; Power class used by the card\n&lt; Enables events from main PPP state machine producing …\n&lt; Enables events from main PPP state machine producing …\n&lt; Enables events coming from PPP PHASE change\n&lt; Enables events coming from PPP PHASE change\n&lt; Callback to be called before a transmission is started.\n&lt; the idle time(in baud-rate) between the non AT char and …\n&lt; pread without context pointer\n&lt; pread with context pointer\n&lt; The default preference of the address\n&lt; Prescale of input signal, effective frequency = …\n&lt; Channel of AP\n&lt; The thread’s priority\n&lt; Priority of the interrupt if it has a fixed priority, …\n&lt; <em>MQTT</em> task priority\n&lt; ESPNOW peer private data\n&lt; ESPNOW peer private data\nProgram a page of the flash. Check <code>max_write_bytes</code> for the …\nProgram a page of the flash. Check <code>max_write_bytes</code> for the …\n&lt; Project name\n!&lt; prompt (NULL represents default: “esp&gt; “)\n&lt; If true, control frames are passed to the reader If …\n&lt; data protocol\n&lt; MQTT protocol version used for connection, defaults to …\n&lt; <em>MQTT</em> protocol version used for connection.\n@brief   Add endpoint request handler for a protocomm …\n@brief   Config parameters for protocomm BLE service\n@brief   Config parameters for protocomm BLE service\n@brief Structure for BLE events in Protocomm.\n@brief   This structure maps handler required by protocomm …\n@brief   Start Bluetooth Low Energy based transport layer …\n@brief   Stop Bluetooth Low Energy based transport layer …\n@brief   Frees internal resources used by a transport …\n@brief   Delete a protocomm instance\n@brief   Config parameters for protocomm HTTP server\nProtocomm HTTPD Configuration Data\n@brief   Config parameters for protocomm HTTP server\n@brief   Start HTTPD protocomm transport\n@brief   Stop HTTPD protocomm transport\n@brief   Create a new protocomm instance\n@brief   Allocates internal resources for new transport …\n@brief   Remove endpoint request handler for a protocomm …\n@brief   Calls the registered handler of an endpoint …\n@brief Function prototype for protocomm endpoint handler\n@brief   Protocomm security object structure.\n@brief   Protocomm Security 1 parameters: Proof Of …\n@brief   Protocomm Security 1 parameters: Proof Of …\n@brief Protocomm Security 2 parameters: Salt and Verifier\n@brief Protocomm Security 2 parameters: Salt and Verifier\n@brief   Protocomm Security 1 parameters: Proof Of …\n@brief   Events generated by the protocomm security layer\n&lt; Received incorrect credentials (username / PoP)\n&lt; Received invalid (NULL) security parameters (username / …\n&lt; Secured session established successfully\n@brief   Protocomm security object structure.\n@brief   Add endpoint security for a protocomm instance\n@brief   Set endpoint for version verification\n@brief   This structure corresponds to a unique instance …\n@brief   Events generated by BLE transport\n@brief   Remove endpoint security for a protocomm instance\n@brief   Remove version verification endpoint from a …\nFunction which is to be called by the manager when it is to\nFunction which is to be called by the manager when it is to\nFunction which is to be called by the manager to stop the …\nFunction which is to be called by the manager to stop the …\n&lt; PS duty information\nAbort an AEAD operation.\nProcess an authenticated decryption operation.\nSet the key for a multipart authenticated decryption …\nProcess an authenticated encryption operation.\nSet the key for a multipart authenticated encryption …\nFinish encrypting a message in an AEAD operation.\nGenerate a random nonce for an authenticated encryption …\nThe type of the state data structure for multipart AEAD …\nDeclare the lengths of the message and additional data for …\nSet the nonce for an authenticated encryption or …\nEncrypt or decrypt a message fragment in an active AEAD …\nPass additional data to an active AEAD operation.\nFinish authenticating and decrypting a message in an AEAD …\n\\brief Encoding of a cryptographic algorithm.\n\\brief Decrypt a short message with a private key.\n\\brief Encrypt a short message with a public key.\nAbort a cipher operation.\nDecrypt a message using a symmetric cipher.\nSet the key for a multipart symmetric decryption operation.\nEncrypt a message using a symmetric cipher.\nSet the key for a multipart symmetric encryption operation.\nFinish encrypting or decrypting a message in a cipher …\nGenerate an IV for a symmetric encryption operation.\nThe type of the state data structure for multipart cipher …\nSet the IV for a symmetric encryption or decryption …\nEncrypt or decrypt a message fragment in an active cipher …\nClose a key handle.\nMake a copy of a key.\nGet the cipher suite from given inputs.\nGet the password from given inputs.\nGet the length of the password in bytes from given inputs.\nGet the peer id from given inputs.\nGet the length of the peer id in bytes from given inputs.\nGet the user id from given inputs.\nGet the length of the user id in bytes from given inputs.\nThe type of input values for PAKE operations.\n\\brief Library initialization.\n\\brief Custom parameters for key generation or key …\n\\brief Destroy a key.\nThe type of PSA Diffie-Hellman group family identifiers.\nA slot number identifying a key in a driver.\nThe type of PSA elliptic curve family identifiers.\nFor encrypt-decrypt functions, whether the operation is an …\n\\brief Export a key in binary format.\n\\brief Export a public key or the public part of a key …\n\\brief Generate a key or key pair.\n\\brief Generate a key or key pair using custom production …\n\\brief Generate a key or key pair using custom production …\n\\brief Generate random bytes.\nRetrieve the attributes of a key.\nAbort a hash operation.\nClone a hash operation.\nCalculate the hash (digest) of a message and compare it …\nCalculate the hash (digest) of a message.\nFinish the calculation of the hash of a message.\nThe type of the state data structure for multipart hash …\nSet up a multipart hash operation.\nAdd a message fragment to a multipart hash operation.\nFinish the calculation of the hash of a message and …\n\\brief Import a key in binary format.\n\\brief                       Get the maximum number of ops …\n\\brief                       Set the maximum number of ops …\nThe type of computation stage for J-PAKE operations.\nThe type of a structure containing key attributes.\nAbort a key derivation operation.\nRetrieve the current capacity of a key derivation …\nProvide an input for key derivation or key agreement.\nProvide a numeric input for key derivation or key …\nProvide an input for key derivation in the form of a key.\nPerform a key agreement and use the shared secret as input …\nThe type of the state data structure for key derivation …\nRead some data from a key derivation operation.\nDerive a key from an ongoing key derivation operation.\nDerive a key from an ongoing key derivation operation with …\nDerive a key from an ongoing key derivation operation with …\nSet the maximum capacity of a key derivation operation.\nSet up a key derivation operation.\n\\brief Encoding of the step of a key derivation.\nCompare output data from a key derivation operation to an …\nCompare output data from a key derivation operation to an …\nEncoding of identifiers of persistent keys.\nEncoding of key lifetimes.\nEncoding of key location indicators.\nEncoding of key persistence levels.\n\\brief Custom parameters for key generation or key …\n\\brief Encoding of a key type.\n\\brief Encoding of permitted usage on a key.\nAbort a MAC operation.\nCalculate the MAC (message authentication code) of a …\nThe type of the state data structure for multipart MAC …\nFinish the calculation of the MAC of a message.\nSet up a multipart MAC calculation operation.\nAdd a message fragment to a multipart MAC operation.\nCalculate the MAC of a message and compare it with a …\nFinish the calculation of the MAC of a message and compare …\nSet up a multipart MAC verification operation.\nOpen a handle to an existing persistent key.\nAbort a PAKE operation.\nThe type of the data structure for PAKE cipher suites.\n\\brief Encoding of the family of the primitive associated …\nGet implicitly confirmed shared secret from a PAKE.\nProvide input for a step of a password-authenticated key …\nThe type of the state data structure for PAKE operations.\nGet output for a step of a password-authenticated key …\n\\brief Encoding of the primitive associated with the PAKE.\nEncoding of the type of the PAKE’s primitive.\n\\brief Encoding of the application role of PAKE\nSet the password for a password-authenticated key exchange …\nSet the peer ID for a password-authenticated key exchange.\nSet the application role for a password-authenticated key …\nSet the user ID for a password-authenticated key exchange.\nSet the session information for a password-authenticated …\nEncoding of input and output indicators for PAKE.\nRemove non-essential copies of key material from memory.\nPerform a key agreement and return the raw shared secret.\nReset a key attribute structure to a freshly initialized …\n\\brief Sign a hash or short message with a private key.\n\\brief                       Abort a sign hash operation.\n\\brief                       Continue and eventually …\n\\brief                       Get the number of ops that a …\n\\brief The context for PSA interruptible hash signing.\nThe type of the state data structure for interruptible hash\n\\brief                       Start signing a hash or short …\n\\brief Sign a message with a private key. For …\n\\brief Verify the signature of a hash or short message …\n\\brief                     Abort a verify hash operation.\n\\brief                       Continue and eventually …\n\\brief                       Get the number of ops that a …\n\\brief The context for PSA interruptible hash verification.\nThe type of the state data structure for interruptible hash\n\\brief                       Start reading and verifying a …\n\\brief Verify the signature of a message with a public …\n&lt; Pointer to PSK hint and key. if not NULL (and …\n&lt; Pointer to PSK hint and key. if not NULL (and …\n&lt; Pointer to PSK struct defined in esp_tls.h to enable PSK …\n@brief ESP-TLS preshared key and hint structure\n@brief ESP-TLS preshared key and hint structure\n&lt; Pointer to the block data\n&lt; Pointer to the block data\n&lt; Publisher’s service instance id\n&lt; NAN Interface MAC of the Publisher\n&lt; Publish Service Identifier\n&lt; Publish Service Identifier\n&lt; Publish Id for NAN Service\n&lt; GPIO pull-down\n&lt; GPIO pull-up\n@brief Get a void pointer to the current TCB of a …\nReturns the ID assigned to the timer.\n&lt; Power control handle\n@brief Power control of Ethernet PHY\n@brief Power control of Ethernet PHY\n&lt; pwrite without context pointer\n&lt; pwrite with context pointer\n&lt; Points to the end of the stack. pxTopOfStack &lt; …\n&lt; Points to the end of the stack. pxTopOfStack &lt; …\n&lt; Next task list item will being traversed.\n&lt; Next task list item will being traversed.\n&lt; Points to the lowest address of the task’s stack area.\n&lt; Points to the lowest address of the task’s stack area.\n&lt; Address of the task control block.\n&lt; Address of the task control block.\nReturns the start of the stack associated with xTask.\n&lt; Current task handle being traversed.\n&lt; Current task handle being traversed.\n&lt; Points to the location of the last item placed on the …\n&lt; Points to the location of the last item placed on the …\n&lt; Max QoS level of the subscription\n&lt; QoS of the messages associated with this event\n&lt; LWT message QoS\n&lt; Max QoS level of the subscription\n&lt; GPIO pin for HD (Hold) signal, or -1 if not used.\n&lt; GPIO pin for WP (Write Protect) signal, or -1 if not …\n&lt; The resolution of one timing quanta, in Hz. Note: the …\n&lt; HTTP query\n&lt; size of the event loop queue\n&lt; Transaction queue size. This sets how many transactions …\n&lt; Transaction queue size. This sets how many transactions …\n&lt; R component [0, 255]\n&lt; the maximum value of the temperature you want to test\n&lt; the minimum value of the temperature you want to test\n&lt; ESPNOW rate of specified interface\n&lt; ESPNOW rate of specified interface\nDirect access to the whole entry inside the containing …\n&lt; The raw certificate data (DER).\n&lt; The raw certificate data (DER).\n&lt; raw CID of MMC card to be decoded after the CSD is …\n&lt; XOR RC4 stream callback function to given data with …\n&lt; the address of the root candidate, i.e. the voted …\n&lt; root address specified by users via API …\n&lt; the address of root switch requester\n&lt; a new root address specified by users for API …\n&lt; the router RSSI of the root candidate\n&lt; RCA (Relative Card Address)\nRead data from the flash. Check <code>max_read_bytes</code> for the …\nRead data from the flash. Check <code>max_read_bytes</code> for the …\n@brief Custom driver SPI read\n&lt; Read without context pointer\n&lt; sector read function\n&lt; block length for reads\nSlicer for read data. The <code>read</code> should be called …\nSlicer for read data. The <code>read</code> should be called …\nRead flash ID.\nRead flash ID.\n&lt; Configured SPI flash read mode. Set before <code>esp_flash_init</code>…\n&lt; Read with context pointer\n@brief Read PHY register\n@brief Read PHY register\n@brief Read PHY register\nRead the status of the flash chip.\nRead the status of the flash chip.\n&lt; readdir without context pointer\n&lt; readdir with context pointer\n&lt; readdir_r without context pointer\n&lt; readdir_r with context pointer\n&lt; flag is set to true if partition is read-only\n&lt; Real working frequency, in kHz, configured on the host …\n&lt; Disconnection reason\n&lt; Disconnection reason\n&lt; Disconnection reason\n&lt; Disconnection reason\n&lt; WPS failure reason wps_fail_reason_t\n&lt; Termination reason code\n&lt; the reason why the voting happens, root initiated or …\n&lt; vote reason, vote could be initiated by children or by …\n&lt; root switch reason, generally root switch is initialized …\n&lt; Reboot counter. Reset only when power is off.\n@brief Receive packet from Ethernet MAC\n@brief Receive packet from Ethernet MAC\n&lt; Point to the received RMT symbols\n&lt; Reconnect to the broker after this value in miliseconds …\n&lt; Timeout for recv function (in seconds)\n&lt; Timeout for recv function (in seconds)\nthe reference count always equals the number of pointers …\n&lt; Refresh connection after this value (in milliseconds)\n&lt; PHY register address\n&lt; Pointer to a memory where the register value is …\nCalled before any erase/write operations to check whether …\n@brief Register LCD panel IO callbacks\nCalled for release temp buffer.\n&lt; Alarm reload count value, effect only when …\n&lt; rename without context pointer\n&lt; rename with context pointer\n&lt; this is used to refresh server list if NTP provided by …\n&lt; this is used to refresh server list if NTP provided by …\n&lt; Neighbor Report received from the AP\n&lt; Length of the report\n&lt; Advertises that Protected Management Frame is required. …\n&lt; reserv1\n&lt; reserv2\n&lt; Reserve\n&lt; Reserved, must be 0.\n&lt; Reserved bytes in additional header space, currently …\n&lt; reserved for IDF\n&lt; reserved for IDF\n@brief Software Reset Ethernet PHY\n@brief Software Reset Ethernet PHY\n@brief Reset encoding state\n@brief Reset LCD panel\n&lt; Reset GPIO number, -1 means no hardware reset\n&lt; GPIO used to reset the LCD panel, set to -1 if it’s …\n@brief Hardware Reset Ethernet PHY\n@brief Hardware Reset Ethernet PHY\n&lt; Reset timeout value (Unit: ms)\n&lt; Counter resolution (working frequency) in Hz, hence, the …\n&lt; Counter resolution in Hz The step size of each count …\n&lt; Resolution of capture timer\n&lt; Channel clock resolution, in Hz\n&lt; Channel clock resolution, in Hz\n&lt; MAC address of the FTM Responder\n&lt; response buffer\nResume flash from suspend manually\nResume flash from suspend manually\n&lt; Retained flag of the message associated with this event\n&lt; LWT retained message flag\n&lt; Extended CSD Revision\n&lt; product revision\nThe revocation date of this entry.\n&lt; Set RGB element order, RGB or BGR\n&lt; @deprecated Set RGB data endian, please use …\n&lt; RMT receiver remove carrier enable\n&lt; rmdir without context pointer\n&lt; rmdir with context pointer\n@brief Add channel into a synchronous group (channels in …\n@brief A helper function to allocate a proper memory for …\n@brief Apply modulation feature for TX channel or …\n@brief Bytes encoder configuration\n@brief Update the configuration of the bytes encoder\n@brief RMT carrier wave configuration (for either …\n@brief RMT Carrier Level\n&lt; RMT carrier wave is modulated for high Level output\n&lt; RMT carrier wave is modulated for low Level output\n@brief Type of RMT channel handle\n@brief Data struct of RMT channel status\n@brief RMT Channel Status\n&lt; RMT channel status busy\n&lt; RMT channel status idle\n&lt; RMT channel uninitialized\n@brief RMT channel ID\n&lt; RMT channel number 0\n&lt; RMT channel number 1\n&lt; RMT channel number 2\n&lt; RMT channel number 3\n&lt; Number of RMT channels\n@brief Type of RMT clock source @brief Type of RMT clock …\n@brief Configure RMT parameters\n@brief Data struct of RMT configure parameters\n@brief Copy encoder configuration\n@brief RMT Data Mode\n@brief Delete an RMT channel\n@brief Delete RMT encoder\n@brief Delete synchronization manager\n@brief Disable the RMT channel\n@brief Initialize RMT driver\n@brief Uninstall RMT driver.\n@brief Enable the RMT channel\n@brief Enable or disable the feature that when loop count …\n@brief Callback for simple callback encoder\n@brief RMT encoding state\n&lt; The encoding session is finished, the caller can …\n&lt; The encoding artifact memory is full, the caller should …\n&lt; The encoding session is in reset state\n@brief Type of RMT encoder handle\n@brief Reset RMT encoder\n@brief Interface of RMT encoder\n@brief Fill memory data of channel with given RMT items.\n@brief Get the current status of eight channels.\n@brief Get RMT clock divider, channel clock is divided …\n@brief Get speed of channel’s internal counter clock.\n@brief Get RMT idle output level for transmitter\n@brief Get RMT memory block number\n@brief Check if the RMT memory is force powered down\n@brief Get RMT memory owner.\n@brief Get ringbuffer from RMT.\n@brief Get RMT idle threshold value.\n@brief Get RMT source clock\n@brief Get RMT status\n@brief Get RMT tx loop mode.\n@brief RMT Idle Level\n&lt; RMT TX idle level: high Level\n&lt; RMT TX idle level: low Level\n@brief   Deregister previously registered RMT interrupt …\n@brief RMT interrupt handle\n@brief Register RMT interrupt handler, the handler is an …\n@brief Definition of RMT item\n@brief RMT Internal Memory Owner\n&lt; RMT RX mode, RMT receiver owns the memory block\n&lt; RMT RX mode, RMT transmitter owns the memory block\n@brief RMT hardware memory layout\n&lt; RMT mode: transmitter or receiver\n@brief RMT Channel Working Mode (TX or RX)\n&lt; RMT RX mode\n&lt; RMT TX mode\n@brief Create RMT bytes encoder, which can encode byte …\n@brief Create RMT copy encoder, which copies the given RMT …\n@brief Create a RMT RX channel\n@brief Create RMT simple callback encoder, which uses a …\n@brief Create a synchronization manager for multiple TX …\n@brief Create a RMT TX channel\n@brief Initiate a receive job for RMT RX channel\n@brief RMT receive specific configuration\nReceive specific flags\n@brief Registers a callback that will be called when …\n@brief Remove channel out of a group\n@brief RMT RX channel specific configuration\n@brief Data struct of RMT RX configure parameters\n@brief Prototype of RMT event callback\n@brief Type of RMT RX done event data\n@brief Group of RMT RX callbacks @note The callbacks are …\n@brief Reset RMT RX memory\n@brief Set callbacks for RMT RX channel\n@brief Set RMT start receiving data.\n@brief Set RMT stop receiving data.\n@brief Set RMT clock divider, channel clock is divided …\n@brief Set RMT RX error interrupt enable\n@brief Configure the GPIO used by RMT channel\n@brief Set RMT idle output level for transmitter\n@brief Set RMT memory block number for RMT channel\n@brief Set RMT memory in low power mode.\n@brief Set RMT memory owner. @note Setting memory is only …\n@brief Set RMT RX filter.\n@brief Set RMT RX idle threshold value\n@brief Set RMT RX interrupt enable\n@brief Set RMT RX threshold event interrupt enable\n@brief Set RMT source clock\n@brief Configure RMT carrier for TX signal.\n@brief Set RMT TX interrupt enable\n@brief Set loop count threshold value for RMT TX channel\n@brief Set RMT tx loop mode.\n@brief Set RMT TX threshold event interrupt enable\n@brief Simple callback encoder configuration\n@brief Type of RMT clock source, reserved for the legacy …\n@brief The layout of RMT symbol stored in memory, which is …\n@brief Synchronous manager configuration\n@brief Type of RMT synchronization manager handle\n@brief Reset synchronization manager\n@brief Get the user context set by ‘…\n@brief Init rmt translator and register user callback. The …\n@brief Set user context for the translator of specific …\n@brief Transmit data by RMT TX channel\n@brief RMT transmit specific configuration\n@brief RMT TX channel specific configuration\n@brief Data struct of RMT TX configure parameters\n@brief Prototype of RMT event callback @param[in] tx_chan …\n@brief Type of RMT TX done event data\n@brief Structure encapsulating a RMT TX end callback\n@brief Type of RMT Tx End callback function\n@brief Group of RMT TX callbacks @note The callbacks are …\n@brief Reset RMT TX memory\n@brief Set event callbacks for RMT TX channel\n@brief Set RMT start sending data from memory.\n@brief Set RMT stop sending.\n@brief Wait for all pending TX transactions done\n@brief Wait RMT TX finished.\n@brief RMT send waveform from rmt_item array.\n@brief Translate uint8_t type of data into rmt format and …\n&lt; I2S role, I2S_ROLE_MASTER or I2S_ROLE_SLAVE\n&lt; I2S role, I2S_ROLE_MASTER or I2S_ROLE_SLAVE\n&lt; root address\n&lt; the capacity of the root, equal to the total child …\n&lt; other powerful root\n&lt; fixed root\n&lt; Integer division operation. For the case that doesn’t …\n&lt; numeric priority of this interface to become a default …\n&lt; numeric priority of this interface to become a default …\n&lt; router configuration\n&lt; router BSSID\n&lt; RSSI of the router, default value is -120\n&lt; new router information\n&lt; routing table change\nNumber of Router Solicitation messages that remain to be …\n&lt; Minimum size for RSA keys\n&lt; Disconnection RSSI\n&lt; Signal strength of AP. Note that in some rare cases …\n&lt; The minimum rssi to accept in the fast scan mode\n&lt; Current average rssi of sta connected\n&lt; Disconnection RSSI\n&lt; Received probe request signal strength\n&lt; RSSI value of bss\n&lt; RSSI of the FTM frame received\n&lt; RSSI of the connected parent, default value is -120, …\n&lt; rssi with router\n&lt; reserved for manufacturer usage\n&lt; the changed value\n&lt; the new value\n@brief Determine if the specified GPIO is a valid RTC GPIO.\nRTCIO output/input mode type.\n&lt; Pad (output + input) disable\n&lt; Pad input\n&lt; Pad input + output\n&lt; Pad input + open-drain output\n&lt; Pad open-drain output\n&lt; Pad output\n@brief Deregister the handler previously registered using …\n@brief Disable the RTC interrupt that is allowed to be …\n@brief Enable the RTC interrupt that is allowed to be …\n@brief Register a handler for specific RTC_CNTL interrupts\n&lt; Round Trip Time in pSec with a peer\n&lt; Estimated Round-Trip-Time with peer in Nano-Seconds\n&lt; Raw average Round-Trip-Time with peer in Nano-Seconds\n&lt; Default antenna mode for receiving, it’s ignored if …\n&lt; Wi-Fi antenna mode for receiving\n&lt; WiFi Block Ack RX window size\n&lt; Pointer to receive buffer, or NULL for no MISO phase. …\n&lt; Pointer to receive buffer, or NULL for no MISO phase. …\n&lt; Rx Callback to receive any response\n&lt; RMT RX parameter\n&lt; Rx control info of ESPNOW packet\n&lt; metadata header\n&lt; received packet radio metadata header of the CSI data\n&lt; Rx control info of ESPNOW packet\n&lt; If SPI_TRANS_USE_RXDATA is set, data is received …\n&lt; Current value of Receive Error Counter\n&lt; UART HW RTS threshold\n!&lt; GPIO number for RX path, -1 means using default one\n&lt; Receive GPIO number\n&lt; WiFi RX MGMT buffer number\n&lt; WiFi RX MGMT buffer type\n&lt; Number of messages that were lost due to a full RX queue …\n&lt; Number of messages that were lost due to a RX FIFO …\n@brief Transmit LCD command and receive corresponding …\n&lt; Number of messages RX queue can hold\n&lt; rx sequence number of the wifi packet\n&lt; Priority of the receive task\n&lt; Stack size of the receive task\n&lt; UART timeout interrupt threshold (unit: time of sending …\n&lt; UART RX full interrupt threshold.\n&lt; Total data length received, should be not greater than …\n&lt; Password identifier for H2E. this needs to be null …\n&lt; Configuration for SAE-PK (Public Key) Authentication …\n&lt; Configuration for SAE PWE derivation method\n&lt; Configuration for SAE PWE derivation method\nPointer to the buffer containing the salt\nPointer to the buffer containing the salt\nPointer to the buffer containing the salt\nLength (in bytes) of the salt\nLength (in bytes) of the salt\nLength (in bytes) of the salt\n&lt; Please refer to <code>soc/soc_caps.h</code> to know the ADC sampling …\n&lt; The expected ADC sampling frequency in Hz. Please refer …\n&lt; I2S sample rate\n&lt; I2S PDM sample rate\n&lt; I2S sample rate\n&lt; I2S sample rate, not suggest to exceed 48000 Hz, …\n&lt; I2S sample rate\n&lt; I2S sample rate\n@brief User callback function to convert uint8_t type data …\n&lt; A union of the supported SAN types\n&lt; Whether to limit the value to the maximum when …\n&lt; minimum scan times before being a root, default:10\n&lt; the number of mesh APs around\n&lt; scan done\n&lt; Scan sequence number, used for block scan\n&lt; Do all channel scan or fast scan\n&lt; Scan time per channel\n&lt; Scan time per channel\n&lt; Scan time in seconds while searching for a NAN cluster\n&lt; scan times being through\n&lt; Scan type, active or passive\n&lt; Start channel of the allowed 2.4GHz Wi-Fi channels\nProvisioning scheme to use. Following schemes are already …\n&lt;  Scheme-specific data (E.g. eFuse block for HMAC-based …\nEvent handler required by the scheme for incorporating …\n&lt;  Security Scheme ID (E.g. HMAC)\n&lt; I2C scl high period\n&lt; GPIO number of I2C SCL signal, pulled-up internally\n&lt; SCL IO number used by I2C bus\n&lt; GPIO number for I2C scl signal\n&lt; I2C scl low period\n&lt; Internal GPIO pull mode for I2C scl signal\n&lt; I2C SCL line frequency.\n&lt; I2C LCD SCL frequency (hz)\n&lt; I2C scl wait_high period\n&lt; Timeout value. (unit: us). Please note this value should …\n&lt; GPIO pin for SPI Clock signal, or -1 if not used.\n&lt; decoded SCR (SD card Configuration Register) value\n&lt; Sigma-delta filter dither\n&lt; Sigma-delta filter dither2\n&lt; Sigma-delta filter prescale\n@brief SD power control handle\n@brief Set SD IO voltage by a registered SD power control …\n&lt; Sigma-delta filter scaling value\n&lt; I2C scl low period\n&lt; GPIO number of I2C SDA signal, pulled-up internally\n&lt; SDA IO number used by I2C bus\n&lt; GPIO number for I2C sda signal\n&lt; Internal GPIO pull mode for I2C sda signal\n&lt; I2C sda sample time\nCheck if SD/MMC card supports discard\nCheck if SD/MMC card supports trim\nProbe and initialize SD/MMC card using given host\n@brief Print information about the card to a stream @param …\nSD/MMC card information structure\nDecoded values from SD card Card IDentification register\nSD/MMC command information\nDecoded values from SD card Card Specific Data register\nSD/MMC Host clock timing delay phases\n&lt; Delay phase 0\n&lt; Delay phase 1\n&lt; Delay phase 2\n&lt; Delay phase 3\nSD/MMC erase command(38) arguments SD: ERASE: Erase the …\n&lt; Discard operation for SD/MMC\n&lt; Erase operation on SD, Trim operation on MMC\nErase given number of sectors from the SD/MMC card\nDecoded values of Extended Card Specific Data\nErase complete SD/MMC card\nGet status of SD/MMC card\nSD/MMC Host description\nEnable SDIO interrupt in the SDMMC host\nGet the data of CIS region of an SDIO card.\nParse and print the CIS information of an SDIO card.\nRead blocks of data from an SDIO card using IO_RW_EXTENDED …\nRead one byte from an SDIO card using IO_RW_DIRECT (CMD52)\nRead multiple bytes from an SDIO card using IO_RW_EXTENDED …\nBlock until an SDIO interrupt is received\nWrite blocks of data to an SDIO card using IO_RW_EXTENDED …\nWrite one byte to an SDIO card using IO_RW_DIRECT (CMD52)\nWrite multiple bytes to an SDIO card using IO_RW_EXTENDED …\nCheck if SD/MMC card supports sanitize\nSanitize the data that was unmapped by a Discard command\nRead given number of sectors from the SD/MMC card\nSD/MMC command response buffer\nDecoded values from SD Configuration Register Note: When …\nDecoded values from SD Status Register Note: When new …\nSD SWITCH_FUNC response buffer\nWrite given number of sectors to SD/MMC card\nHandle representing an SD SPI device\nExtra configuration for SD SPI device.\n@brief Release resources allocated using sdspi_host_init\n@brief Send command to the card and get response\n@brief Get the DMA memory information for the host driver\n@brief Calculate working frequency for specific device\n@brief Initialize SD SPI driver\n@brief Attach and initialize an SD SPI device on the …\n@brief Enable SDIO interrupt.\n@brief Wait for SDIO interrupt until timeout.\n@brief Remove an SD SPI device\n@brief Set card clock frequency\n&lt; Time.\n&lt; secure data management features supported by the card\n&lt; Secondary channel of AP\n&lt; sector size in bytes\n&lt; Secure version\nHandler function for authenticating connection request and …\nHandler function for authenticating connection request and …\n&lt; seekdir without context pointer\n&lt; seekdir with context pointer\n&lt; Count of memory segments\n&lt; RSSI threshold for parent selection. It should be a …\n&lt; the capacity of myself, total child numbers plus 1, all …\n&lt; layer\n&lt; semaphore instance\n&lt; Depth of internal transfer ringbuffer, increase this …\n&lt; Timeout for send function (in seconds)\n&lt; Timeout for send function (in seconds)\n&lt; product serial number\nThe serial number of the revoked certificate.\n&lt; Unique id for certificate issued by a specific CA.\n&lt; set to true to request NTP server config from DHCP\n&lt; set to true to request NTP server config from DHCP\nTCP Port number for receiving and transmitting HTTP traffic\nTCP Port number for receiving and transmitting HTTP traffic\n&lt; Server certificate in a buffer This buffer should be …\n&lt; Size of server certificate pointed to by …\n&lt; Server certificate legacy name\n&lt; Size of server certificate legacy name\n&lt; Server key in a buffer This buffer should be NULL …\n&lt; Size of server key pointed to by serverkey_pem_buf\n&lt; Server key decryption password string\n&lt; Server key decryption password string\n&lt; String length of the password pointed to by …\n&lt; String length of the password pointed to by …\n&lt; Server key legacy name\n&lt; Size of server key legacy name\n&lt; list of servers\n&lt; list of servers\n&lt; Service name identifier\n&lt; Service name identifier\n128 bit UUID of the provisioning service\n128 bit UUID of the provisioning service\nSession Context Pointer\nSession Context Pointer\n&lt; <em>MQTT</em> session configuration.\n&lt; <em>MQTT</em> session_present flag for connection event\n@brief Set MAC address\n@brief Set PHY chip address\n@brief Set MAC address\n@brief Set PHY chip address\n&lt; host function to set DDR mode\n&lt; host function to set bus width\n&lt; host function to set card clock frequency\n&lt; host function to set whether the clock is always enabled\nFunction which is to be called by the manager to set a …\nFunction which is to be called by the manager to set a …\nHandler function called when WiFi connection configuration …\nHandler function called when WiFi connection configuration …\nFunction which is to be called by the manager to set the …\nFunction which is to be called by the manager to set the …\n@brief Set duplex mode of MAC\n@brief Sets PHY duplex mode\n@brief Set duplex mode of MAC\n@brief Sets PHY duplex mode\nCall to set flash operation status\n@brief Set extra gap in x and y axis\n&lt; set input delay phase\n@brief Set link status of MAC\n@brief Set Ethernet PHY link status\n@brief Set link status of MAC\n@brief Set Ethernet PHY link status\n@brief Set mediator for Ethernet MAC\n@brief Set mediator for PHY\n@brief Set mediator for Ethernet MAC\n@brief Set mediator for PHY\n&lt; Selects a NULL client id\n@brief Set the PAUSE ability of peer node\n@brief Set the PAUSE ability of peer node\n@brief Set promiscuous of MAC\n@brief Set promiscuous of MAC\n@brief Set speed of MAC\n@brief Sets PHY speed mode\n@brief Set speed of MAC\n@brief Sets PHY speed mode\nDisable write protection.\nDisable write protection.\n&lt; I2C start and stop condition setup period\n&lt; SHA1-based Pseudo-Random Function (PRF) (IEEE 802.11i, …\n&lt; SHA-1 hash callback function for data vector\n&lt; The SHA256 PRF callback function used by esp_wifi\n&lt; SHA256 hash callback function for data vector\n&lt;Waterproof. Shield channel drive capability configuration.\n&lt;Waterproof. Shield channel drive capability configuration.\n&lt; manually left shift bits of the scale of the CSI data. …\n&lt; Enable it to scan AP whose SSID is hidden\nShutdown handler type\n&lt; Event signal, in same task, different Event with …\n&lt; Event signal, in same task, different Event with …\n&lt; CRL signature type identifier\n&lt; Signature algorithm, e.g. sha1RSA\n@brief Sigma-delta channel list\n&lt; Sigma-delta channel 0\n&lt; Sigma-delta channel 1\n&lt; Sigma-delta channel 2\n&lt; Sigma-delta channel 3\n&lt; Sigma-delta channel max\n@brief Configure Sigma-delta channel\n@brief Sigma-delta configure struct\n&lt; Sigma-delta duty, duty ranges from -128 to 127.\n&lt; Sigma-delta output io number, refer to gpio.h for more …\n@brief SIGMADELTA port number, the max port number is …\n&lt; SIGMADELTA port 0\n&lt; SIGMADELTA port max\n&lt; Sigma-delta prescale, prescale ranges from 0 to 255.\n@brief Set Sigma-delta channel duty.\n@brief Set Sigma-delta signal output pin\n@brief Set Sigma-delta channel’s clock pre-scale value. …\n&lt; RMT will stop receiving if one symbol level has kept …\n&lt; A pulse whose width is smaller than this threshold will …\n&lt; Sinc filter scaling value\n&lt; Use Single Filter Mode (see documentation)\n&lt; The size of the block\n&lt; The size of the block\n&lt; Size of the region\n&lt; Size of SPI flash in bytes. If 0, size will be detected …\n&lt; The crypto callback function structure size\n&lt; data size\n&lt; size of the partition, in bytes\nElement size\n&lt; size of <em>MQTT</em> send/receive buffer\n&lt; Conversion frame size\n&lt; The buffer size of DMA buffer when success to send or …\n&lt; I2S data size for I2S_DATA event\n&lt; UART data size for UART_DATA event\n&lt; Synchronization Jump Width (Max time quanta jump for …\n&lt; Skip any validation of server certificate CN field\n&lt; Skip any validation of server certificate CN field, this …\n&lt; Skip any validation of server certificate CN field\n&lt; Skip any validation of server certificate CN field\n&lt; Set true to enable skip mask. If it is enabled, only the …\n&lt; Set to enable skip mask. If it is enabled, only the data …\n&lt; Set to enable skip mask. If it is enabled, only the data …\n!&lt; Setting to skip unhandled events in light sleep for …\n&lt; I2C slave config\n&lt; I2C slave address\n&lt; I2C address for slave mode\n@endcond\n&lt; slot number, to be passed to host functions\n&lt; I2S slot bit width (total bits per slot), only support …\n&lt; I2S slot bit width (total bits per slot)\n&lt; I2S slot bit width (total bits per slot)\n&lt; PDM TX slot configurations, can be generated by macro …\n&lt; Standard mode slot configuration, can be generated by …\n&lt; TDM mode slot configuration, can be generated by macros …\n&lt; Select the left, right or both slot\n&lt; Slot mask. Activating slots by setting 1 to …\n&lt; Set mono or stereo mode with I2S_SLOT_MODE_MONO or …\n&lt; Set mono or stereo mode with I2S_SLOT_MODE_MONO or …\n&lt; Set mono or stereo mode with I2S_SLOT_MODE_MONO or …\nArgument structure for SC_EVENT_GOT_SSID_PSWD event\nSmartconfig event declarations\n&lt; Station smartconfig has found the channel of the target …\n&lt; Station smartconfig got the SSID and password\n&lt; Station smartconfig has finished to scan for APs\n&lt; Station smartconfig has sent ACK to cellphone\nConfigure structure for esp_smartconfig_start\n&lt; protocol: AirKiss\n&lt; protocol: ESPTouch\n&lt; protocol: ESPTouch and AirKiss\n&lt; protocol: ESPTouch v2\n&lt;Level of filter applied on the original data against …\n&lt;Level of filter applied on the original data against …\n&lt; set to true if smooth sync required\n&lt; set to true if smooth sync required\n@brief Get the sync interval of SNTP operation\n@brief Get set sync mode\n@brief Get status of time sync\n@brief system time getter used in the sntp module @note …\n@brief Restart SNTP\n@brief Set the sync interval of SNTP operation\n@brief Set the sync mode\n@brief Set status of time sync\n@brief system time setter used in the sntp module @note …\n@brief Set a callback function for time synchronization …\nSNTP time update mode\n&lt; Update system time immediately when receiving a response …\n&lt; Smooth time updating. Time error is gradually reduced …\nSNTP sync status\n@brief This function updates the system time.\n@brief SNTP callback function for notifying about time …\nCLOCK …\n&lt; PLL_CLK is the output of crystal oscillator frequency …\n&lt; From PLL, usually be 80MHz\n&lt; RC fast clock, about 17.5MHz\n&lt; RC slow clock, depends on the RTC_CLK_SRC configuration\n&lt; Main crystal oscillator clock\n@brief CPU_CLK mux inputs, which are the supported clock …\n&lt; Invalid CPU_CLK source\n&lt; Select PLL_CLK as CPU_CLK source (PLL_CLK is the output …\n&lt; Select RC_FAST_CLK as CPU_CLK source\n&lt; Select XTAL_CLK as CPU_CLK source\n@brief Supported clock sources for modules (CPU, …\n&lt; APB_CLK is highly dependent on the CPU_CLK source\n&lt; CPU_CLK can be sourced from XTAL, PLL, or RC_FAST by …\n&lt; Indication of the end of the available module clock …\n&lt; PLL_F160M_CLK is derived from PLL, and has a fixed …\n&lt; PLL_F80M_CLK is derived from PLL, and has a fixed …\n&lt; RC_FAST_CLK comes from the internal 20MHz rc oscillator, …\n&lt; RC_FAST_D256_CLK comes from the internal 20MHz rc …\n&lt; RTC_FAST_CLK can be sourced from XTAL_D2 or RC_FAST by …\n&lt; RTC_SLOW_CLK can be sourced from RC_SLOW, XTAL32K, or …\n&lt; XTAL_CLK comes from the external 40MHz crystal\n&lt; XTAL32K_CLK comes from the external 32kHz crystal, …\n@brief ADC digital controller clock source\n&lt; Select APB as the source clock\n&lt; Select APB as the default clock choice\n@brief Glitch filter clock source\n&lt; Select APB clock as the source clock\n&lt; Select APB clock as the default clock choice\n@brief Type of GPTimer clock source\n&lt; Select APB as the source clock\n&lt; Select APB as the default choice\n&lt; Select XTAL as the source clock\n@brief Type of I2C clock source.\n@brief I2S clock source enum\n&lt; Select PLL_F160M as the default source clock\n&lt; Select external clock as source clock\n&lt; Select PLL_F160M as the source clock\n&lt; Select XTAL as the source clock\n@brief Type of LEDC clock source, reserved for the legacy …\n&lt; LEDC source clock will be automatically selected based …\n&lt; Select APB as the source clock\n&lt; Select RC_FAST as the source clock\n&lt; Alias of ‘LEDC_USE_RC_FAST_CLK’\n&lt; Select XTAL as the source clock\n@brief MWDT clock source\n&lt; Select APB as the source clock\n&lt; Select APB as the default clock choice\n&lt; Select XTAL as the source clock\n@brief Type of RMT clock source, reserved for the legacy …\n&lt; RMT source clock is APB\n&lt; RMT source clock default choice is APB\n&lt; RMT source clock is XTAL\n@brief Type of RMT clock source\n&lt; Select APB as the source clock\n&lt; Select APB as the default choice\n&lt; Select RC_FAST as the source clock\n&lt; Select XTAL as the source clock\n@brief Sigma Delta Modulator clock source\n&lt; Select APB as the source clock\n&lt; Select APB as the default clock choice\n@brief Type of SPI clock source.\n&lt; Select APB as SPI source clock\n&lt; Select APB as SPI source clock\n&lt; Select XTAL as SPI source clock\n@brief Type of SYSTIMER clock source\n&lt; SYSTIMER source clock default choice is XTAL\n&lt; SYSTIMER source clock is XTAL\n@brief Type of Temp Sensor clock source\n&lt; Select XTAL as the default choice\n&lt; Select RC_FAST as the source clock\n&lt; Select XTAL as the source clock\n@brief Type of Timer Group clock source, reserved for the …\n&lt; Timer group clock source is APB\n&lt; Timer group clock source default choice is APB\n&lt; Timer group clock source is XTAL\n@brief TWAI clock source\n&lt; Select APB as the source clock\n&lt; Select APB as the default clock choice\n@brief Type of UART clock source, reserved for the legacy …\n&lt; UART source clock is APB CLK\n&lt; UART source clock default choice is APB\n&lt; UART source clock is RC_FAST\n&lt; UART source clock is XTAL\n@brief Naming conventions: RESET_REASON_{reset level}_…\n@brief Root clock\n&lt; External 40MHz crystal\n&lt; External 32kHz crystal/clock signal\n&lt; Internal 17.5MHz RC oscillator\n&lt; Internal 136kHz RC oscillator\n@brief RTC_FAST_CLK mux inputs, which are the supported …\n&lt; Invalid RTC_FAST_CLK source\n&lt; Select RC_FAST_CLK as RTC_FAST_CLK source\n&lt; Select XTAL_D2_CLK (may referred as XTAL_CLK_DIV_2) as …\n&lt; Alias name for <code>SOC_RTC_FAST_CLK_SRC_XTAL_D2</code>\n@brief RTC_SLOW_CLK mux inputs, which are the supported …\n&lt; Invalid RTC_SLOW_CLK source\n&lt; Select RC_FAST_D256_CLK (referred as FOSC_DIV or …\n&lt; Select RC_SLOW_CLK as RTC_SLOW_CLK source\n&lt; Select XTAL32K_CLK as RTC_SLOW_CLK source\n@brief Possible main XTAL frequency options on the target …\n&lt; 32MHz XTAL\n&lt; 40MHz XTAL\nsocket select function for socket FDs with the …\n&lt; Sort the connect AP in the list by rssi or security mode\n&lt; UART source clock selection\n&lt; Extra configuration for specific color conversion\n&lt; LEDC speed speed_mode, high-speed mode (only exists on …\n&lt; LEDC speed speed_mode, high-speed mode (only exists on …\n&lt; Speed mode of the LEDC channel group\n@brief Allocate a device on a SPI bus\n@brief This is a configuration structure for a SPI bus.\n@brief Free a SPI bus\n@brief Get max length (in bytes) of one transaction\n@brief Initialize a SPI bus\n@brief Remove a device from the SPI bus\n@brief Type of SPI clock source. @brief Type of SPI clock …\n@brief SPI command.\n@brief SPI DMA channels\n&lt; Enable DMA, channel is automatically selected by driver\n&lt; Do not enable DMA for SPI\n@brief Occupy the SPI bus for a device to do continuous …\n@brief Calculate working frequency for specific device\n@brief Get the result of a SPI transaction queued earlier …\n@brief This is a configuration for a SPI slave device that …\n@brief Poll until the polling transaction ends.\n@brief Immediately start a polling transaction.\n@brief Send a polling transaction, wait for it to …\n@brief Queue a SPI transaction for interrupt transaction …\n@brief Release the SPI bus occupied by the device. All …\n@brief Send a SPI transaction, wait for it to complete, …\n@brief SPI DMA channels @brief SPI DMA channels\nSPI Events\n&lt; The buffer has received data from master.\n&lt; The buffer has sent data to master.\n&lt; Received CMD9 from master.\n&lt; Received CMDA from master.\n&lt; Slave has received certain number of data from master, …\n&lt; Slave has loaded its RX data buffer to the hardware …\n&lt; Master has received certain number of the data, the …\n&lt; Slave has loaded its TX data buffer to the hardware …\n&lt; A transaction has done\n@brief Given a memory address where flash is mapped, …\nStructure for flash encryption operations.\nHost driver configuration and context structure.\nHost driver configuration and context structure.\nSPI Flash Host driver instance\n@brief Map region of flash memory into data or instruction …\n@brief Display information about mapped regions\n@brief get free pages number which can be mmap\n@brief Opaque handle for memory region obtained from …\n@brief Enumeration which specifies memory space requested …\n&lt; map to data memory, allows byte-aligned access\n&lt; map to instruction memory, allows only 4-byte-aligned …\n@brief Map sequences of pages of flash memory into data or …\n@brief Release region previously obtained using …\n@brief Given a physical offset in flash, return the …\nConfiguration structure for the flash chip suspend feature.\nDefinition of a common transaction. Also holds the return …\n@brief Calculate the working frequency that is most close …\n@brief Get the frequency limit of current configurations. …\n@brief Calculate the timing settings of specified …\n@brief Enum with the three SPI peripherals that are …\n&lt; SPI1\n&lt; SPI2\n&lt; invalid host value\n@brief Line mode of SPI transaction phases: CMD, ADDR, …\n&lt; flash read mode (esp_image_spi_mode_t as uint8_t)\n&lt; Traditional SPI mode (0~3)\n&lt; Drive settings for the SPI flash pins (read by ROM …\n@brief Free a SPI bus claimed as a SPI slave interface\n@brief Get the result of a SPI transaction queued earlier\n@brief Initialize a SPI bus as a slave interface\n@brief This is a configuration for a SPI host acting as a …\n@brief Queue a SPI transaction for execution\nThis structure describes one SPI transaction\n@brief Do a SPI transaction\nThis struct is for SPI transactions which may change their …\nThis structure describes one SPI transaction. The …\n&lt; CS GPIO pin for this device, or -1 if not used\n&lt; CS GPIO pin for this device\n&lt; Source address of ESPNOW packet\n&lt; Source address of ESPNOW packet\n&lt; Source clock frequency, unit: Hz\n&lt; SSID of disconnected AP\n&lt; SSID of connected AP\n&lt; SSID of AP\n&lt; SSID of AP\n&lt; SSID of soft-AP. If ssid_len field is 0, this must be a …\n&lt; SSID of target AP.\n&lt; SSID of connected AP\n&lt; SSID of disconnected AP\n&lt; SSID of AP\n&lt; SSID of the AP. Null terminated string.\n&lt; SSID\n&lt; SSID of the to which connection was estalished\n&lt; SSID of the AP to which the slave is to be connected\n&lt; Broadcast SSID or not, default 0, broadcast the SSID\n&lt; SSID length of disconnected AP\n&lt; SSID length of connected AP\n&lt; Optional length of SSID field.\n&lt; SSID length of connected AP\n&lt; SSID length of disconnected AP\n&lt; length of SSID\n&lt; decoded SSR (SD Status Register) value\n&lt; Configuration of STA\n&lt; station list\n&lt; WiFi Power Management for station at disconnected status\n&lt; stack config\n&lt; stack config\n&lt; A bit mask of memory capabilities (MALLOC_CAPS*) to use …\n@brief Deliver packet to upper stack\n@brief Deliver packet to upper stack\n@brief Input frame buffer to user’s stack\n&lt; The maximum stack size allowed for the server task\n&lt; The maximum stack size allowed for the server task\n&lt; <em>MQTT</em> task stack size\nStack size of server task, adjusted depending upon stack …\n&lt; The stack size of the pthread\n&lt; Start address of the heap in which the block is located\n@brief Start Ethernet MAC\n&lt; set to true to automatically start the SNTP service\n&lt; Start address of the heap in which the block is located\nCalled before commencing any flash operation. Does not …\n@brief Start Ethernet MAC\n&lt; set to true to automatically start the SNTP service\nstart_select is called for setting up synchronous I/O …\n&lt; stat without context pointer\n&lt; stat with context pointer\nThis field can be set by the device driver and could point …\n1: up; 0: down\n1: up; 0: down\n&lt; intermediate digest state\n&lt; intermediate digest state\n&lt; Current state of TWAI controller …\n&lt; WiFi static RX buffer number\n&lt; WiFi static TX buffer number\n&lt; Status of scanning APs: 0 — success, 1 - failure\n&lt; Status of the FTM operation\n&lt; Status of the operation\n&lt; NDP status code\n&lt; disk status check function\n&lt; Store the current status of each channel\n&lt; Status Code\n&lt; Status Code\n&lt; enable to receive space time block code HT long training …\n@brief Stop Ethernet MAC\n@brief Stop Ethernet MAC\n&lt; UART stop bits\ncalled by VFS to interrupt the socket_select call when …\nstop_socket_select which can be called from ISR; set only …\n&lt; storage for FreeRTOS queue\n&lt; Stretch cause can be got in callback\n&lt; NAN Interface MAC of the Subscriber\n&lt; WS subprotocol\n&lt; The parsed subject data (named information object).\n&lt; Optional list of raw entries of Subject Alternative …\n&lt; Optional X.509 v2/v3 subject unique identifier.\n&lt; Optional X.509 v3 extension subject key identifier.\n&lt; The raw subject data (DER). Used for quick comparison.\n&lt; Subscribe Service Identifier\n&lt; Subscribe Service Identifier\n&lt; partition subtype\n@brief Check whether the SPI host supports direct read\n@brief Check whether the SPI host supports direct read\n@brief Check whether the SPI host supports direct write\n@brief Check whether the SPI host supports direct write\n&lt; SUS/SUS1/SUS2 bit in flash register.\nSuspend feature setup for setting cmd and status register …\nSuspend feature setup for setting cmd and status register …\nSet flash in suspend status manually\nSet flash in suspend status manually\n&lt; Service info shared in Publish frame\n&lt; Service info shared in Subscribe frame\n&lt; Service info(or message) to be shared\n&lt; Service Specific Info\n&lt; Service Specific Info\n&lt; Software reset timeout value (Unit: ms)\n@brief Swap/Exchange x and y axis\n&lt; root switch request\n&lt; Disassociate with current parent and switch to a new …\n&lt; Which sync as the trigger\n&lt; optionally sets callback function on time sync event\n&lt; optionally sets callback function on time sync event\n&lt; The sync event source. Set to NULL will disable the …\n&lt; The sync event source\n&lt; Time of departure of FTM frame from FTM Responder in pSec\n&lt; Time of arrival of FTM frame at FTM Initiator in pSec\n&lt; Time of departure of ACK from FTM Initiator in pSec\n&lt; Time of arrival of ACK at FTM Responder in pSec\n&lt; ASN1 type, e.g. MBEDTLS_ASN1_UTF8_STRING.\n&lt; ASN1 type, e.g. MBEDTLS_ASN1_UTF8_STRING.\n&lt; Target IP address, either IPv4 or IPv6\n&lt; FreeRTOS task configuration.\n&lt; The memory capabilities to use when allocating the HTTP …\n&lt; The memory capabilities to use when allocating the HTTP …\n!&lt; repl task affinity, i.e. which core the task is pinned …\n&lt; core to which the event loop task is pinned to, ignored …\n&lt; name of the event loop task; if NULL, a dedicated task …\n&lt; Priority of internal ping task\n&lt; Priority of FreeRTOS task which runs the server\n!&lt; repl task priority\n&lt; priority of the event loop task, ignored if task name is …\n&lt; Priority of FreeRTOS task which runs the server\n&lt; Priority of server task\n!&lt; repl task stack size\n&lt; stack size of the event loop task, ignored if task name …\n&lt; Stack size of internal ping task\n&lt; GPTimer ETM task type\n&lt; The raw certificate body (DER). The part that is To Be …\n&lt; The raw certificate body (DER). The part that is To Be …\n@brief Wait for transmission of output\n&lt; tcdrain without context pointer\n&lt; tcdrain with context pointer\n@brief Suspend or restart the transmission or reception of …\n&lt; tcflow without context pointer\n&lt; tcflow with context pointer\n@brief Flush non-transmitted output data and non-read …\n&lt; tcflush without context pointer\n&lt; tcflush with context pointer\n@brief Gets the parameters of the terminal\n&lt; tcgetattr without context pointer\n&lt; tcgetattr with context pointer\n@brief Get process group ID for session leader for …\n&lt; tcgetsid without context pointer\n&lt; tcgetsid with context pointer\n@brief Send a break for a specific duration\n&lt; tcsendbreak without context pointer\n&lt; tcsendbreak with context pointer\n@brief Sets the parameters of the terminal\n&lt; tcsetattr without context pointer\n&lt; tcsetattr with context pointer\n&lt; telldir without context pointer\n&lt; telldir with context pointer\n@brief Type of Temp Sensor clock source @brief Type of …\n@brief Configuration of measurement range for the …\n@brief Disable temperature sensor\n@brief Enable the temperature sensor\n@brief temperature sensor event types enum\n&lt; Maximum number of temperature sensor events\n&lt; Temperature sensor over limit event\n@brief temperature sensor task types enum\n&lt; Maximum number of temperature sensor tasks\n&lt; Temperature sensor start task\n&lt; Temperature sensor stop task\n@brief Read temperature sensor data that is converted to …\n@brief Type of temperature sensor driver handle\n@brief Install temperature sensor driver\n@brief Uninstall the temperature sensor driver\n&lt; The thread name.\n&lt; When scan_threshold is set, only APs which have an auth …\n&lt; Compile time\n&lt; UART data read timeout flag for UART_DATA event (no new …\n&lt; Network timeout in milliseconds. Note: If this value is …\n&lt; TWDT timeout duration in milliseconds\n&lt; response timeout, in milliseconds\n&lt; Timeout value (in milliseconds) of each ping procedure\n&lt; Network timeout in milliseconds. Note: If this value is …\n&lt; Network timeout in milliseconds\n&lt; Abort network operation if it is not completed after …\n@brief Timer alarm command\n&lt; Disable timer alarm\n&lt; Enable timer alarm\n&lt; timer handler argument\n&lt; timer handler argument\n@brief Timer autoreload command\n&lt; Disable auto-reload: hardware will not load counter …\n&lt; Enable auto-reload: hardware will load counter value …\n@brief Timer configurations\n@brief Timer count direction\n&lt; Descending Count from cnt.high|cnt.low\n&lt; Maximum number of timer count directions\n&lt; Ascending Count from Zero\n@brief Deinitializes the timer.\n@brief Disable timer interrupt\n@brief Enable timer interrupt\n&lt; Timer event, upon which MCPWM timer will generate the …\n&lt; abstruct time when timer expire\n&lt; abstruct time when timer expire\n&lt; timer handler\n&lt; timer handler\n@brief Get timer alarm value.\n@brief Get timer configure value.\n@brief Read the counter value of hardware timer, in unit …\n@brief Read the counter value of hardware timer.\n@brief Clear timer interrupt status, just used in ISR\n@brief Enable alarm interrupt, just used in ISR\n@brief Get auto reload enable status, just used in ISR\n@brief Get the current counter value, just used in ISR\n@brief Get interrupt status, just used in ISR\n@brief Disable timer group interrupt, by disable mask\n@brief Enable timer group interrupt, by enable mask\n@brief Set the alarm threshold for the timer, just used in …\n@brief Enable/disable a counter, just used in ISR\n@brief Timer-Group ID\n&lt; Hw timer group 0\n&lt; Hw timer group 1\n&lt; Maximum number of Hw timer groups\n@brief Timer ID\n&lt; Select timer0 of GROUPx\n@brief Initializes and configure the timer.\n@brief Timer interrupt type\n&lt; Interrupt mode: level mode\n@brief Interrupt types of the timer.\n&lt; interrupt of timer 0\n&lt; interrupt of watchdog\n@brief Add ISR handle callback for the corresponding timer.\n@brief Remove ISR handle callback for the corresponding …\n@brief Interrupt handle, used in order to free the isr …\n@brief Register Timer interrupt handler, the handler is an …\n@brief Interrupt handler callback function\n&lt; timer linker\n&lt; timer linker\n&lt; The timer source of channel (0 - LEDC_TIMER_MAX-1)\n@brief Pause the counter of hardware timer.\n&lt; timer period, 0 means timer is not periodic repeated\n&lt; timer period, 0 means timer is not periodic repeated\n&lt; Select the timer source of channel (0 - LEDC_TIMER_MAX-1)\n@brief Enable or disable generation of timer alarm events.\n@brief Set timer alarm value.\n@brief Enable or disable counter reload function when …\n@brief Set counting mode for hardware timer.\n@brief Set counter value to hardware timer.\n@brief Set hardware divider of the source clock to the …\n@brief Timer group clock source @brief Type of Timer Group …\n@brief Start the counter of hardware timer.\n@brief Timer start/stop command\n&lt; Pause timer counter\n&lt; Start timer counter\n&lt;  XTS tweak key\n&lt; The TLS NamedCurve identifier.\n@brief Keep alive parameters structure\n@brief Keep alive parameters structure\n&lt; TLS protocol version of the connection, e.g., TLS 1.2, …\n&lt; TLS protocol version of the connection, e.g., TLS 1.2, …\n&lt; TLS protocol version of the connection, e.g., TLS 1.2, …\nType by which software timers are referenced.  For …\n&lt; state represents whether the root is able to access …\n&lt; to external DS\n&lt; toDS state, devices shall check this state firstly …\n&lt; to self\n&lt; to child queue\n&lt; to child (P2P) queue\n&lt; to parent queue\n&lt; to parent (P2P) queue\n&lt; Token from cellphone which is used to send ACK to …\n&lt; Topic associated with this event\n&lt; LWT (Last Will and Testament) message topic\n&lt; Length of the topic for this event associated with this …\nTopic definition struct\n&lt; data type of service\n&lt; Type of Service, a field specified in the IP header\ntotal length of this buffer and all next buffers in chain …\n&lt; number of bytes processed\n&lt; number of bytes processed\n&lt;  Total bytes allocated to data in the heap.\n&lt;  Total number of (variable size) blocks in the heap.\n&lt; I2S Total number of channels. If it is smaller than the …\n&lt; I2S Total number of channels. If it is smaller than the …\n&lt; Total length of the data (longer data are supplied with …\n&lt; Total size of all the allocated DMA buffers\n&lt; Number of all entries.\n&lt;  Total free bytes in the heap. Equivalent to …\n&lt; Total number of ESPNOW peers, maximum value is …\n&lt; Total number of ESPNOW peers, maximum value is …\n&lt; I2S total number of slots. If it is smaller than the …\nTouch sensor charge/discharge speed\n&lt;Touch sensor charge / discharge speed, always zero\n&lt;Touch sensor charge / discharge speed, slowest\n&lt;Touch sensor charge / discharge speed\n&lt;Touch sensor charge / discharge speed\n&lt;Touch sensor charge / discharge speed\n&lt;Touch sensor charge / discharge speed\n&lt;Touch sensor charge / discharge speed\n&lt;Touch sensor charge / discharge speed, fast\nTouch sensor filter configuration\nTouch sensor filter configuration\n@brief Touch channel IIR filter coefficient configuration. …\n&lt;The filter mode is first-order IIR filter. The …\n&lt;The filter mode is first-order IIR filter. The …\n&lt;The filter mode is first-order IIR filter. The …\n&lt;The filter mode is first-order IIR filter. The …\n&lt;The filter mode is first-order IIR filter. The …\n&lt;The filter mode is first-order IIR filter. The …\n&lt;The filter mode is first-order IIR filter. The …\n&lt;The filter mode is jitter filter\nTouch sensor FSM mode\n&lt;To start touch FSM by software trigger\n&lt;To start touch FSM by timer\nTouch sensor high reference voltage\n&lt;Touch sensor high reference voltage, 2.4V\n&lt;Touch sensor high reference voltage, 2.5V\n&lt;Touch sensor high reference voltage, 2.6V\n&lt;Touch sensor high reference voltage, 2.7V\n&lt;Touch sensor high reference voltage, no change\nTouch sensor low reference voltage\n&lt;Touch sensor low reference voltage, 0.5V\n&lt;Touch sensor low reference voltage, 0.6V\n&lt;Touch sensor low reference voltage, 0.7V\n&lt;Touch sensor low reference voltage, 0.8V\n&lt;Touch sensor low reference voltage, no change\n&lt;Set touch channel number for sleep pad. Only one touch …\nTouch channel idle state configuration\n&lt;Idle status of touch channel is ground connection\n&lt;Idle status of touch channel is high resistance state\nTouch sensor denoise configuration\n&lt;Denoise channel internal reference capacitance is 5pf\n&lt;Denoise channel internal reference capacitance is 6.4pf\n&lt;Denoise channel internal reference capacitance is 7.8pf\n&lt;Denoise channel internal reference capacitance is 9.2pf\n&lt;Denoise channel internal reference capacitance is 10.6pf\n&lt;Denoise channel internal reference capacitance is 12.0pf\n&lt;Denoise channel internal reference capacitance is 13.4pf\n&lt;Denoise channel internal reference capacitance is 14.8pf\n&lt;Denoise range is 10bit\n&lt;Denoise range is 12bit\n&lt;Denoise range is 4bit\n&lt;Denoise range is 8bit\nTouch sensor denoise configuration\n&lt;Active for one of the enabled channels.\n&lt;Measurement done for one of the enabled channels.\n&lt;Inactive for one of the enabled channels.\n&lt;Measurement done for all the enabled channels.\n&lt;Timeout for one of the enabled channels.\nTouch sensor shield channel drive capability level\n&lt;The max equivalent capacitance in shield channel is 40pf\n&lt;The max equivalent capacitance in shield channel is 80pf\n&lt;The max equivalent capacitance in shield channel is 120pf\n&lt;The max equivalent capacitance in shield channel is 160pf\n&lt;The max equivalent capacitance in shield channel is 200pf\n&lt;The max equivalent capacitance in shield channel is 240pf\n&lt;The max equivalent capacitance in shield channel is 280pf\n&lt;The max equivalent capacitance in shield channel is 320pf\nTouch sensor channel sleep configuration\nTouch pad channel\n&lt; Touch pad channel 0 is GPIO4(ESP32)\n&lt; Touch pad channel 1 is GPIO0(ESP32) / GPIO1(ESP32-S2)\n&lt; Touch pad channel 2 is GPIO2(ESP32) / GPIO2(ESP32-S2)\n&lt; Touch pad channel 3 is GPIO15(ESP32) / GPIO3(ESP32-S2)\n&lt; Touch pad channel 4 is GPIO13(ESP32) / GPIO4(ESP32-S2)\n&lt; Touch pad channel 5 is GPIO12(ESP32) / GPIO5(ESP32-S2)\n&lt; Touch pad channel 6 is GPIO14(ESP32) / GPIO6(ESP32-S2)\n&lt; Touch pad channel 7 is GPIO27(ESP32) / GPIO7(ESP32-S2)\n&lt; Touch pad channel 8 is GPIO33(ESP32) / GPIO8(ESP32-S2)\n&lt; Touch pad channel 9 is GPIO32(ESP32) / GPIO9(ESP32-S2)\nTouch sensor waterproof configuration\nTouch sensor waterproof configuration\n@brief Level of filter applied on the original data …\n&lt;Filter the raw data. The coefficient is 2 (Typical value).\n&lt;Filter the raw data. The coefficient is 4.\n&lt;Filter the raw data. The coefficient is 8.\n&lt;No filtering of raw data.\nTouch sensor initial charge level\n&lt;Initial level of charging voltage, high level\n&lt;Initial level of charging voltage, low level\nESP32 Only\n&lt;Touch interrupt will happen if counter value is larger …\n&lt;Touch interrupt will happen if counter value is less than …\n&lt; wakeup interrupt is generated if both SET1 and SET2 are …\n&lt; wakeup interrupt is generated if SET1 is “touched”\nTouch sensor high reference voltage attenuation\n&lt;Touch sensor high reference voltage attenuation,   0V …\n&lt;Touch sensor high reference voltage attenuation, 0.5V …\n&lt;Touch sensor high reference voltage attenuation, 1.0V …\n&lt;Touch sensor high reference voltage attenuation, 1.5V …\n&lt;Touch sensor high reference voltage attenuation, no change\n&lt; I2C bus timeout period\n&lt; Max transfer speed\n&lt; Transaction data length, in bits\n&lt; Depth of internal transfer queue, increase this value …\n&lt; Depth of internal transfer queue, increase this value …\n&lt; Size of internal transaction queue\n@endcond\n&lt; transmit function pointer\n@brief Transmit packet from Ethernet MAC\n&lt; transmit function pointer\n@brief Transmit packet from Ethernet MAC\n@brief Transmit packet from Ethernet MAC constructed with …\n@brief Transmit packet from Ethernet MAC constructed with …\n&lt; transmit wrap function pointer\n&lt; transmit wrap function pointer\n&lt; Selects transport\n&lt; Custom transport handle to use. Warning: The transport …\n&lt; HTTP transport type, see <code>esp_http_client_transport_t</code>\n&lt; tree top, mesh_assoc IE\n&lt; Trigger panic when timeout occurs\n&lt; Enables triple sampling when the TWAI controller samples …\n&lt; truncate without context pointer\n&lt; truncate with context pointer\n&lt; Timing segment 1 (Number of time quanta, between 1 to 16)\n&lt; Timing segment 2 (Number of time quanta, 1 to 8)\nType by which tasks are referenced.  For example, a call …\n&lt; Time to Live,a field specified in the IP header\n@brief   Clear the receive queue\n@brief   Clear the receive queue of a given TWAI driver …\n@brief   Clear the transmit queue\n@brief Clear the transmit queue of a given TWAI driver …\n@brief TWAI clock source @brief TWAI clock source\n@brief   Install TWAI driver\n@brief Install TWAI driver and return a handle\n@brief   Uninstall the TWAI driver\n@brief Uninstall the TWAI driver with a given handle\n@brief   Structure for acceptance filter configuration of …\n@brief   Structure for general configuration of the TWAI …\n@brief   Get current status information of the TWAI driver\n@brief Get current status information of a given TWAI …\n@brief TWAI controller handle\n@brief   Start the bus recovery process\n@brief Start the bus recovery process with a given handle\n@brief   Structure to store a TWAI message\n@brief   TWAI Controller operating modes\n&lt; The TWAI controller will not influence the bus (No …\n&lt; Normal operating mode where TWAI controller can …\n&lt; Transmission does not require acknowledgment. Use this …\n@brief   Read TWAI driver alerts\n@brief Read TWAI driver alerts with a given handle\n@brief   Receive a TWAI message\n@brief Receive a TWAI message via a given handle\n@brief   Reconfigure which alerts are enabled\n@brief Reconfigure which alerts are enabled, with a given …\n@brief   Start the TWAI driver\n@brief Start the TWAI driver with a given handle\n@brief   TWAI driver states\n&lt; Bus-off state. The TWAI controller cannot participate in …\n&lt; Recovering state. The TWAI controller is undergoing bus …\n&lt; Running state. The TWAI controller can transmit and …\n&lt; Stopped state. The TWAI controller will not participate …\n@brief   Structure to store status information of TWAI …\n@brief   Stop the TWAI driver\n@brief Stop the TWAI driver with a given handle\n@brief   Structure for bit timing configuration of the …\n@brief   Transmit a TWAI message\n@brief Transmit a TWAI message via a given handle\n&lt; The AES context used for tweak computation.\n&lt; The AES context used for tweak computation.\n&lt; Wi-Fi antenna mode for transmission, it can be set to …\n&lt; WiFi TX buffer type\n&lt; Pointer to transmit buffer, or NULL for no MOSI phase\n&lt; Pointer to transmit buffer, or NULL for no MOSI phase\n&lt; Array of TX channels that are about to be managed by a …\n@brief Transmit LCD RGB data\n&lt; RMT TX parameter\n&lt; If SPI_TRANS_USE_TXDATA is set, data set here is sent …\n&lt; I2S auto clear tx descriptor if there is underflow …\n&lt; I2S auto clear tx descriptor if there is underflow …\n&lt; Current value of Transmit Error Counter\n&lt; Number of messages that failed transmissions\n!&lt; GPIO number for TX path, -1 means using default one\n&lt; WiFi TX HE TB QUEUE number for STA HE TB PPDU …\n&lt; Transmit GPIO number\n@brief Transmit LCD command and corresponding parameters\n&lt; Number of messages TX queue can hold (set to 0 to …\n&lt; UART TX empty interrupt threshold.\n&lt;When the configured output format is 12bit.\n&lt; ipaddress type\n@ref lwip_ip_addr_type\n&lt; Whether the interrupt is an edge or level type …\n&lt; ipaddress type\n&lt; Service type\n&lt; Service type\n&lt; Type of smartconfig(ESPTouch or AirKiss).\n&lt; ESP defined IE type, include Assoc IE, SSID IE, Ext …")