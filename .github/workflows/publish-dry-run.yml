name: PublishDryRun

on:
  workflow_dispatch

env:
  rust_toolchain: nightly

jobs:
  publishdryrun:
    name: Publish Dry Run
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - riscv32imc-esp-espidf
          - xtensa-esp32-espidf
          - xtensa-esp32s2-espidf
          - xtensa-esp32s3-espidf
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.rust_toolchain }}
          components: rustfmt, clippy
          default: true
        if: matrix.target == 'riscv32imc-esp-espidf'

      - name: Setup | Std
        run: rustup component add rust-src --toolchain ${{ env.rust_toolchain }}-x86_64-unknown-linux-gnu
        if: matrix.target == 'riscv32imc-esp-espidf'

      - name: Install Rust for Xtensa
        uses: esp-rs/xtensa-toolchain@v1.2.0
        with:
          default: true
        if: matrix.target != 'riscv32imc-esp-espidf'

      - name: Setup | Std
        run: rustup component add rust-src --toolchain ${{ env.rust_toolchain }}-x86_64-unknown-linux-gnu

      - name: Build | Publish Dry Run
        run: export ESP_IDF_TOOLS_INSTALL_DIR=out; export ESP_IDF_SDKCONFIG_DEFAULTS=$(pwd)/.github/configs/sdkconfig.defaults; cargo publish --dry-run --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort
