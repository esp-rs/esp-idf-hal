name: Publish

on:
  workflow_dispatch

env:
  rust_toolchain: nightly-2022-04-07
  crate_name: esp-idf-hal

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - riscv32imc-esp-espidf
          - xtensa-esp32-espidf
          - xtensa-esp32s2-espidf
          - xtensa-esp32s3-espidf
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.rust_toolchain }}
          default: true
        if: matrix.target == 'riscv32imc-esp-espidf'

      - name: Setup | Std
        run: rustup component add rust-src --toolchain ${{ env.rust_toolchain }}-x86_64-unknown-linux-gnu
        if: matrix.target == 'riscv32imc-esp-espidf'

      - name: Install Rust for Xtensa
        uses: esp-rs/xtensa-toolchain@v1.2.0
        with:
          default: true
        if: matrix.target != 'riscv32imc-esp-espidf'

      - name: Login
        run: cargo login ${{ secrets.crates_io_token }}

      - name: Build | Publish
        run: export ESP_IDF_TOOLS_INSTALL_DIR=out; export ESP_IDF_SDKCONFIG_DEFAULTS=$(pwd)/.github/configs/sdkconfig.defaults; cargo publish --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort

      - name: Build Documentation
        run: cargo doc --features esp-idf-sys/native --target ${{ matrix.target }} -Zbuild-std=std,panic_abort -Zbuild-std-features=panic_immediate_abort; echo "<meta http-equiv=\"refresh\" content=\"0; url=esp_idf_hal\">" > target/riscv32imc-esp-espidf/doc/index.html; mv target/riscv32imc-esp-espidf/doc ./docs

      - name: Deploy Documentation
        if: ${{ (github.ref == 'refs/heads/master') && (matrix.target == 'riscv32imc-esp-espidf') }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          publish_dir: ./docs

      - name: Get the crate version from cargo
        run: |
          version=$(cargo metadata --format-version=1 --no-deps | jq -r ".packages[] | select(.name == \"${{env.crate_name}}\") | .version")
          echo "crate_version=$version" >> $GITHUB_ENV
          echo "${{env.crate_name}} version: $version"
      - name: Tag the new release
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{env.crate_version}}
          message: "Release v${{env.crate_version}}"
