(function() {
    var type_impls = Object.fromEntries([["byteorder",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteOrder-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1938-2124\">Source</a><a href=\"#impl-ByteOrder-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"byteorder/trait.ByteOrder.html\" title=\"trait byteorder::ByteOrder\">ByteOrder</a> for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1940-1942\">Source</a><a href=\"#method.read_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u16\" class=\"fn\">read_u16</a>(buf: &amp;[u8]) -&gt; u16</h4></section></summary><div class='docblock'>Reads an unsigned 16 bit integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1945-1947\">Source</a><a href=\"#method.read_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u32\" class=\"fn\">read_u32</a>(buf: &amp;[u8]) -&gt; u32</h4></section></summary><div class='docblock'>Reads an unsigned 32 bit integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1950-1952\">Source</a><a href=\"#method.read_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u64\" class=\"fn\">read_u64</a>(buf: &amp;[u8]) -&gt; u64</h4></section></summary><div class='docblock'>Reads an unsigned 64 bit integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1955-1957\">Source</a><a href=\"#method.read_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u128\" class=\"fn\">read_u128</a>(buf: &amp;[u8]) -&gt; u128</h4></section></summary><div class='docblock'>Reads an unsigned 128 bit integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_uint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1960-1966\">Source</a><a href=\"#method.read_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_uint\" class=\"fn\">read_uint</a>(buf: &amp;[u8], nbytes: usize) -&gt; u64</h4></section></summary><div class='docblock'>Reads an unsigned n-bytes integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_uint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_uint128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1969-1975\">Source</a><a href=\"#method.read_uint128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_uint128\" class=\"fn\">read_uint128</a>(buf: &amp;[u8], nbytes: usize) -&gt; u128</h4></section></summary><div class='docblock'>Reads an unsigned n-bytes integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_uint128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1978-1980\">Source</a><a href=\"#method.write_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u16\" class=\"fn\">write_u16</a>(buf: &amp;mut [u8], n: u16)</h4></section></summary><div class='docblock'>Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1983-1985\">Source</a><a href=\"#method.write_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u32\" class=\"fn\">write_u32</a>(buf: &amp;mut [u8], n: u32)</h4></section></summary><div class='docblock'>Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1988-1990\">Source</a><a href=\"#method.write_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u64\" class=\"fn\">write_u64</a>(buf: &amp;mut [u8], n: u64)</h4></section></summary><div class='docblock'>Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1993-1995\">Source</a><a href=\"#method.write_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u128\" class=\"fn\">write_u128</a>(buf: &amp;mut [u8], n: u128)</h4></section></summary><div class='docblock'>Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_uint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1998-2009\">Source</a><a href=\"#method.write_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_uint\" class=\"fn\">write_uint</a>(buf: &amp;mut [u8], n: u64, nbytes: usize)</h4></section></summary><div class='docblock'>Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_uint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_uint128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2012-2023\">Source</a><a href=\"#method.write_uint128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_uint128\" class=\"fn\">write_uint128</a>(buf: &amp;mut [u8], n: u128, nbytes: usize)</h4></section></summary><div class='docblock'>Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_uint128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u16_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2026-2028\">Source</a><a href=\"#method.read_u16_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u16_into\" class=\"fn\">read_u16_into</a>(src: &amp;[u8], dst: &amp;mut [u16])</h4></section></summary><div class='docblock'>Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u16_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2031-2033\">Source</a><a href=\"#method.read_u32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u32_into\" class=\"fn\">read_u32_into</a>(src: &amp;[u8], dst: &amp;mut [u32])</h4></section></summary><div class='docblock'>Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2036-2038\">Source</a><a href=\"#method.read_u64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u64_into\" class=\"fn\">read_u64_into</a>(src: &amp;[u8], dst: &amp;mut [u64])</h4></section></summary><div class='docblock'>Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u128_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2041-2043\">Source</a><a href=\"#method.read_u128_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u128_into\" class=\"fn\">read_u128_into</a>(src: &amp;[u8], dst: &amp;mut [u128])</h4></section></summary><div class='docblock'>Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.read_u128_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u16_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2046-2048\">Source</a><a href=\"#method.write_u16_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u16_into\" class=\"fn\">write_u16_into</a>(src: &amp;[u16], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u16_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2051-2053\">Source</a><a href=\"#method.write_u32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u32_into\" class=\"fn\">write_u32_into</a>(src: &amp;[u32], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2056-2058\">Source</a><a href=\"#method.write_u64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u64_into\" class=\"fn\">write_u64_into</a>(src: &amp;[u64], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u128_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2061-2063\">Source</a><a href=\"#method.write_u128_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u128_into\" class=\"fn\">write_u128_into</a>(src: &amp;[u128], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#tymethod.write_u128_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2066-2072\">Source</a><a href=\"#method.from_slice_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_u16\" class=\"fn\">from_slice_u16</a>(numbers: &amp;mut [u16])</h4></section></summary><div class='docblock'>Converts the given slice of unsigned 16 bit integers to a particular\nendianness. <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_u16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2075-2081\">Source</a><a href=\"#method.from_slice_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_u32\" class=\"fn\">from_slice_u32</a>(numbers: &amp;mut [u32])</h4></section></summary><div class='docblock'>Converts the given slice of unsigned 32 bit integers to a particular\nendianness. <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2084-2090\">Source</a><a href=\"#method.from_slice_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_u64\" class=\"fn\">from_slice_u64</a>(numbers: &amp;mut [u64])</h4></section></summary><div class='docblock'>Converts the given slice of unsigned 64 bit integers to a particular\nendianness. <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2093-2099\">Source</a><a href=\"#method.from_slice_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_u128\" class=\"fn\">from_slice_u128</a>(numbers: &amp;mut [u128])</h4></section></summary><div class='docblock'>Converts the given slice of unsigned 128 bit integers to a particular\nendianness. <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2102-2111\">Source</a><a href=\"#method.from_slice_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_f32\" class=\"fn\">from_slice_f32</a>(numbers: &amp;mut [f32])</h4></section></summary><div class='docblock'>Converts the given slice of IEEE754 single-precision (4 bytes) floating\npoint numbers to a particular endianness. <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_f32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#2114-2123\">Source</a><a href=\"#method.from_slice_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_f64\" class=\"fn\">from_slice_f64</a>(numbers: &amp;mut [f64])</h4></section></summary><div class='docblock'>Converts the given slice of IEEE754 double-precision (8 bytes) floating\npoint numbers to a particular endianness. <a href=\"byteorder/trait.ByteOrder.html#tymethod.from_slice_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u24\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#248-250\">Source</a><a href=\"#method.read_u24\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_u24\" class=\"fn\">read_u24</a>(buf: &amp;[u8]) -&gt; u32</h4></section></summary><div class='docblock'>Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32. <a href=\"byteorder/trait.ByteOrder.html#method.read_u24\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u48\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#288-290\">Source</a><a href=\"#method.read_u48\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_u48\" class=\"fn\">read_u48</a>(buf: &amp;[u8]) -&gt; u64</h4></section></summary><div class='docblock'>Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64. <a href=\"byteorder/trait.ByteOrder.html#method.read_u48\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u24\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#406-408\">Source</a><a href=\"#method.write_u24\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_u24\" class=\"fn\">write_u24</a>(buf: &amp;mut [u8], n: u32)</h4></section></summary><div class='docblock'>Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32. <a href=\"byteorder/trait.ByteOrder.html#method.write_u24\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u48\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#446-448\">Source</a><a href=\"#method.write_u48\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_u48\" class=\"fn\">write_u48</a>(buf: &amp;mut [u8], n: u64)</h4></section></summary><div class='docblock'>Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64. <a href=\"byteorder/trait.ByteOrder.html#method.write_u48\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#546-548\">Source</a><a href=\"#method.read_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i16\" class=\"fn\">read_i16</a>(buf: &amp;[u8]) -&gt; i16</h4></section></summary><div class='docblock'>Reads a signed 16 bit integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_i16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i24\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#568-570\">Source</a><a href=\"#method.read_i24\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i24\" class=\"fn\">read_i24</a>(buf: &amp;[u8]) -&gt; i32</h4></section></summary><div class='docblock'>Reads a signed 24 bit integer from <code>buf</code>, stored in i32. <a href=\"byteorder/trait.ByteOrder.html#method.read_i24\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#590-592\">Source</a><a href=\"#method.read_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i32\" class=\"fn\">read_i32</a>(buf: &amp;[u8]) -&gt; i32</h4></section></summary><div class='docblock'>Reads a signed 32 bit integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_i32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i48\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#612-614\">Source</a><a href=\"#method.read_i48\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i48\" class=\"fn\">read_i48</a>(buf: &amp;[u8]) -&gt; i64</h4></section></summary><div class='docblock'>Reads a signed 48 bit integer from <code>buf</code>, stored in i64. <a href=\"byteorder/trait.ByteOrder.html#method.read_i48\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#634-636\">Source</a><a href=\"#method.read_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i64\" class=\"fn\">read_i64</a>(buf: &amp;[u8]) -&gt; i64</h4></section></summary><div class='docblock'>Reads a signed 64 bit integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_i64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#656-658\">Source</a><a href=\"#method.read_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i128\" class=\"fn\">read_i128</a>(buf: &amp;[u8]) -&gt; i128</h4></section></summary><div class='docblock'>Reads a signed 128 bit integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#679-681\">Source</a><a href=\"#method.read_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_int\" class=\"fn\">read_int</a>(buf: &amp;[u8], nbytes: usize) -&gt; i64</h4></section></summary><div class='docblock'>Reads a signed n-bytes integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_int128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#702-704\">Source</a><a href=\"#method.read_int128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_int128\" class=\"fn\">read_int128</a>(buf: &amp;[u8], nbytes: usize) -&gt; i128</h4></section></summary><div class='docblock'>Reads a signed n-bytes integer from <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_int128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#725-727\">Source</a><a href=\"#method.read_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_f32\" class=\"fn\">read_f32</a>(buf: &amp;[u8]) -&gt; f32</h4></section></summary><div class='docblock'>Reads a IEEE754 single-precision (4 bytes) floating point number. <a href=\"byteorder/trait.ByteOrder.html#method.read_f32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#748-750\">Source</a><a href=\"#method.read_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_f64\" class=\"fn\">read_f64</a>(buf: &amp;[u8]) -&gt; f64</h4></section></summary><div class='docblock'>Reads a IEEE754 double-precision (8 bytes) floating point number. <a href=\"byteorder/trait.ByteOrder.html#method.read_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#770-772\">Source</a><a href=\"#method.write_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i16\" class=\"fn\">write_i16</a>(buf: &amp;mut [u8], n: i16)</h4></section></summary><div class='docblock'>Writes a signed 16 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i24\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#792-794\">Source</a><a href=\"#method.write_i24\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i24\" class=\"fn\">write_i24</a>(buf: &amp;mut [u8], n: i32)</h4></section></summary><div class='docblock'>Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32. <a href=\"byteorder/trait.ByteOrder.html#method.write_i24\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#814-816\">Source</a><a href=\"#method.write_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i32\" class=\"fn\">write_i32</a>(buf: &amp;mut [u8], n: i32)</h4></section></summary><div class='docblock'>Writes a signed 32 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i48\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#836-838\">Source</a><a href=\"#method.write_i48\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i48\" class=\"fn\">write_i48</a>(buf: &amp;mut [u8], n: i64)</h4></section></summary><div class='docblock'>Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64. <a href=\"byteorder/trait.ByteOrder.html#method.write_i48\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#858-860\">Source</a><a href=\"#method.write_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i64\" class=\"fn\">write_i64</a>(buf: &amp;mut [u8], n: i64)</h4></section></summary><div class='docblock'>Writes a signed 64 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#880-882\">Source</a><a href=\"#method.write_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i128\" class=\"fn\">write_i128</a>(buf: &amp;mut [u8], n: i128)</h4></section></summary><div class='docblock'>Writes a signed 128 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#903-905\">Source</a><a href=\"#method.write_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_int\" class=\"fn\">write_int</a>(buf: &amp;mut [u8], n: i64, nbytes: usize)</h4></section></summary><div class='docblock'>Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_int128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#926-928\">Source</a><a href=\"#method.write_int128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_int128\" class=\"fn\">write_int128</a>(buf: &amp;mut [u8], n: i128, nbytes: usize)</h4></section></summary><div class='docblock'>Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_int128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#949-951\">Source</a><a href=\"#method.write_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_f32\" class=\"fn\">write_f32</a>(buf: &amp;mut [u8], n: f32)</h4></section></summary><div class='docblock'>Writes a IEEE754 single-precision (4 bytes) floating point number. <a href=\"byteorder/trait.ByteOrder.html#method.write_f32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#972-974\">Source</a><a href=\"#method.write_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_f64\" class=\"fn\">write_f64</a>(buf: &amp;mut [u8], n: f64)</h4></section></summary><div class='docblock'>Writes a IEEE754 double-precision (8 bytes) floating point number. <a href=\"byteorder/trait.ByteOrder.html#method.write_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i16_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1090-1095\">Source</a><a href=\"#method.read_i16_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i16_into\" class=\"fn\">read_i16_into</a>(src: &amp;[u8], dst: &amp;mut [i16])</h4></section></summary><div class='docblock'>Reads signed 16 bit integers from <code>src</code> to <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_i16_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1119-1124\">Source</a><a href=\"#method.read_i32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i32_into\" class=\"fn\">read_i32_into</a>(src: &amp;[u8], dst: &amp;mut [i32])</h4></section></summary><div class='docblock'>Reads signed 32 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_i32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1148-1153\">Source</a><a href=\"#method.read_i64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i64_into\" class=\"fn\">read_i64_into</a>(src: &amp;[u8], dst: &amp;mut [i64])</h4></section></summary><div class='docblock'>Reads signed 64 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_i64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i128_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1177-1182\">Source</a><a href=\"#method.read_i128_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_i128_into\" class=\"fn\">read_i128_into</a>(src: &amp;[u8], dst: &amp;mut [i128])</h4></section></summary><div class='docblock'>Reads signed 128 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_i128_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1207-1213\">Source</a><a href=\"#method.read_f32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_f32_into\" class=\"fn\">read_f32_into</a>(src: &amp;[u8], dst: &amp;mut [f32])</h4></section></summary><div class='docblock'>Reads IEEE754 single-precision (4 bytes) floating point numbers from\n<code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_f32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f32_into_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1242-1244\">Source</a><a href=\"#method.read_f32_into_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_f32_into_unchecked\" class=\"fn\">read_f32_into_unchecked</a>(src: &amp;[u8], dst: &amp;mut [f32])</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.3.0: please use <code>read_f32_into</code> instead</span></div></span><div class='docblock'><strong>DEPRECATED</strong>. <a href=\"byteorder/trait.ByteOrder.html#method.read_f32_into_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1269-1275\">Source</a><a href=\"#method.read_f64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_f64_into\" class=\"fn\">read_f64_into</a>(src: &amp;[u8], dst: &amp;mut [f64])</h4></section></summary><div class='docblock'>Reads IEEE754 single-precision (4 bytes) floating point numbers from\n<code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.read_f64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f64_into_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1305-1307\">Source</a><a href=\"#method.read_f64_into_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.read_f64_into_unchecked\" class=\"fn\">read_f64_into_unchecked</a>(src: &amp;[u8], dst: &amp;mut [f64])</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.3.0: please use <code>read_f64_into</code> instead</span></div></span><div class='docblock'><strong>DEPRECATED</strong>. <a href=\"byteorder/trait.ByteOrder.html#method.read_f64_into_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i8_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1428-1433\">Source</a><a href=\"#method.write_i8_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i8_into\" class=\"fn\">write_i8_into</a>(src: &amp;[i8], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes signed 8 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i8_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i16_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1456-1461\">Source</a><a href=\"#method.write_i16_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i16_into\" class=\"fn\">write_i16_into</a>(src: &amp;[i16], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes signed 16 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i16_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1484-1489\">Source</a><a href=\"#method.write_i32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i32_into\" class=\"fn\">write_i32_into</a>(src: &amp;[i32], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes signed 32 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1512-1517\">Source</a><a href=\"#method.write_i64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i64_into\" class=\"fn\">write_i64_into</a>(src: &amp;[i64], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes signed 64 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i128_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1540-1545\">Source</a><a href=\"#method.write_i128_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_i128_into\" class=\"fn\">write_i128_into</a>(src: &amp;[i128], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes signed 128 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_i128_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_f32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1569-1574\">Source</a><a href=\"#method.write_f32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_f32_into\" class=\"fn\">write_f32_into</a>(src: &amp;[f32], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes IEEE754 single-precision (4 bytes) floating point numbers from\n<code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_f32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_f64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1598-1603\">Source</a><a href=\"#method.write_f64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.write_f64_into\" class=\"fn\">write_f64_into</a>(src: &amp;[f64], dst: &amp;mut [u8])</h4></section></summary><div class='docblock'>Writes IEEE754 double-precision (8 bytes) floating point numbers from\n<code>src</code> into <code>dst</code>. <a href=\"byteorder/trait.ByteOrder.html#method.write_f64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1699-1704\">Source</a><a href=\"#method.from_slice_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.from_slice_i16\" class=\"fn\">from_slice_i16</a>(src: &amp;mut [i16])</h4></section></summary><div class='docblock'>Converts the given slice of signed 16 bit integers to a particular\nendianness. <a href=\"byteorder/trait.ByteOrder.html#method.from_slice_i16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1724-1729\">Source</a><a href=\"#method.from_slice_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.from_slice_i32\" class=\"fn\">from_slice_i32</a>(src: &amp;mut [i32])</h4></section></summary><div class='docblock'>Converts the given slice of signed 32 bit integers to a particular\nendianness. <a href=\"byteorder/trait.ByteOrder.html#method.from_slice_i32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1749-1754\">Source</a><a href=\"#method.from_slice_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.from_slice_i64\" class=\"fn\">from_slice_i64</a>(src: &amp;mut [i64])</h4></section></summary><div class='docblock'>Converts the given slice of signed 64 bit integers to a particular\nendianness. <a href=\"byteorder/trait.ByteOrder.html#method.from_slice_i64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1774-1779\">Source</a><a href=\"#method.from_slice_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder/trait.ByteOrder.html#method.from_slice_i128\" class=\"fn\">from_slice_i128</a>(src: &amp;mut [i128])</h4></section></summary><div class='docblock'>Converts the given slice of signed 128 bit integers to a particular\nendianness. <a href=\"byteorder/trait.ByteOrder.html#method.from_slice_i128\">Read more</a></div></details></div></details>","ByteOrder","byteorder::BE","byteorder::NetworkEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-Clone-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Clone for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a>Read more</a></div></details></div></details>","Clone","byteorder::BE","byteorder::NetworkEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-Debug-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Debug for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; Result</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a>Read more</a></div></details></div></details>","Debug","byteorder::BE","byteorder::NetworkEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1815-1819\">Source</a><a href=\"#impl-Default-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Default for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1816-1818\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">default</a>() -&gt; <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a>Read more</a></div></details></div></details>","Default","byteorder::BE","byteorder::NetworkEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-Hash-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Hash for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash</a>&lt;__H: Hasher&gt;(&amp;self, state: &amp;mut __H)</h4></section></summary><div class='docblock'>Feeds this value into the given [<code>Hasher</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.3.0\">1.3.0</span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: &amp;mut H)<div class=\"where\">where\n    H: Hasher,\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given [<code>Hasher</code>]. <a>Read more</a></div></details></div></details>","Hash","byteorder::BE","byteorder::NetworkEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-Ord-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Ord for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>) -&gt; Ordering</h4></section></summary><div class='docblock'>This method returns an [<code>Ordering</code>] between <code>self</code> and <code>other</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.21.0\">1.21.0</span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.50.0\">1.50.0</span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: Sized,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a>Read more</a></div></details></div></details>","Ord","byteorder::BE","byteorder::NetworkEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-PartialEq-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PartialEq for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>) -&gt; bool</h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ne</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","byteorder::BE","byteorder::NetworkEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-PartialOrd-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PartialOrd for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>) -&gt; Option&lt;Ordering&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">le</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">gt</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"since rightside\" title=\"Stable since Rust version 1.0.0\">1.0.0</span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ge</a>(&amp;self, other: &amp;Rhs) -&gt; bool</h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a>Read more</a></div></details></div></details>","PartialOrd","byteorder::BE","byteorder::NetworkEndian"],["<section id=\"impl-Copy-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-Copy-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Copy for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section>","Copy","byteorder::BE","byteorder::NetworkEndian"],["<section id=\"impl-Eq-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-Eq-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Eq for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section>","Eq","byteorder::BE","byteorder::NetworkEndian"],["<section id=\"impl-StructuralPartialEq-for-BigEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder/lib.rs.html#1812\">Source</a><a href=\"#impl-StructuralPartialEq-for-BigEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl StructuralPartialEq for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a></h3></section>","StructuralPartialEq","byteorder::BE","byteorder::NetworkEndian"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[57906]}