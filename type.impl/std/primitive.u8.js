(function() {
    var type_impls = Object.fromEntries([["esp_idf_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CInterruptType%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/gpio.rs.html#226-232\">Source</a><a href=\"#impl-From%3CInterruptType%3E-for-u8\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl From&lt;<a class=\"enum\" href=\"esp_idf_hal/gpio/enum.InterruptType.html\" title=\"enum esp_idf_hal::gpio::InterruptType\">InterruptType</a>&gt; for u8</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/gpio.rs.html#227-231\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(interrupt_type: <a class=\"enum\" href=\"esp_idf_hal/gpio/enum.InterruptType.html\" title=\"enum esp_idf_hal::gpio::InterruptType\">InterruptType</a>) -&gt; u8</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<InterruptType>","esp_idf_hal::sys::__uint8_t","esp_idf_hal::sys::__uint_least8_t","esp_idf_hal::sys::uint_least8_t","esp_idf_hal::sys::uint_fast8_t","esp_idf_hal::sys::__sa_family_t","esp_idf_hal::sys::StackType_t","esp_idf_hal::sys::u_int8_t","esp_idf_hal::sys::u_char","esp_idf_hal::sys::u8_t","esp_idf_hal::sys::cc_t","esp_idf_hal::sys::BYTE","esp_idf_hal::sys::TCHAR","esp_idf_hal::sys::DSTATUS","esp_idf_hal::sys::netif_addr_idx_t","esp_idf_hal::sys::sa_family_t","esp_idf_hal::sys::psa_ecc_family_t","esp_idf_hal::sys::psa_dh_family_t","esp_idf_hal::sys::psa_key_persistence_t","esp_idf_hal::sys::psa_pake_role_t","esp_idf_hal::sys::psa_pake_step_t","esp_idf_hal::sys::psa_pake_primitive_type_t","esp_idf_hal::sys::psa_pake_family_t","esp_idf_hal::sys::wifi_prov_security1_params_t","esp_idf_hal::sys::mipi_dsi_data_type_t"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTdmSlot%3E-for-u8\" class=\"impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/i2s/tdm.rs.html#740-761\">Source</a><a href=\"#impl-From%3CTdmSlot%3E-for-u8\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl From&lt;<a class=\"enum\" href=\"esp_idf_hal/i2s/config/enum.TdmSlot.html\" title=\"enum esp_idf_hal::i2s::config::TdmSlot\">TdmSlot</a>&gt; for u8</h3><div class=\"docblock\"><p>Convert a <code>TdmSlot</code> to a <code>u8</code>.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/esp_idf_hal/i2s/tdm.rs.html#741-760\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">from</a>(slot: <a class=\"enum\" href=\"esp_idf_hal/i2s/config/enum.TdmSlot.html\" title=\"enum esp_idf_hal::i2s::config::TdmSlot\">TdmSlot</a>) -&gt; u8</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TdmSlot>","esp_idf_hal::sys::__uint8_t","esp_idf_hal::sys::__uint_least8_t","esp_idf_hal::sys::uint_least8_t","esp_idf_hal::sys::uint_fast8_t","esp_idf_hal::sys::__sa_family_t","esp_idf_hal::sys::StackType_t","esp_idf_hal::sys::u_int8_t","esp_idf_hal::sys::u_char","esp_idf_hal::sys::u8_t","esp_idf_hal::sys::cc_t","esp_idf_hal::sys::BYTE","esp_idf_hal::sys::TCHAR","esp_idf_hal::sys::DSTATUS","esp_idf_hal::sys::netif_addr_idx_t","esp_idf_hal::sys::sa_family_t","esp_idf_hal::sys::psa_ecc_family_t","esp_idf_hal::sys::psa_dh_family_t","esp_idf_hal::sys::psa_key_persistence_t","esp_idf_hal::sys::psa_pake_role_t","esp_idf_hal::sys::psa_pake_step_t","esp_idf_hal::sys::psa_pake_primitive_type_t","esp_idf_hal::sys::psa_pake_family_t","esp_idf_hal::sys::wifi_prov_security1_params_t","esp_idf_hal::sys::mipi_dsi_data_type_t"]]],["esp_idf_sys",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[3940,19]}